#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
"""
import requests
import json

BASE_URL = "https://new-api-generator.onrender.com"

def test_template_previews():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤"""
    
    print("üñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤")
    print("=" * 50)
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
    print("\n1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤")
    try:
        response = requests.get(f"{BASE_URL}/api/templates", timeout=30)
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            templates = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–±–ª–æ–Ω–æ–≤
            for i, template in enumerate(templates[:3]):
                print(f"\nüìã –®–∞–±–ª–æ–Ω {i+1}:")
                print(f"   ID: {template.get('id', '–ù–ï–¢ ID')}")
                print(f"   Name: {template.get('name', '–ù–ï–¢ –ò–ú–ï–ù–ò')}")
                print(f"   Role: {template.get('role', '–ù–ï–¢ –†–û–õ–ò')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–≤—å—é
                if 'preview_url' in template:
                    print(f"   ‚úÖ Preview URL: {template['preview_url']}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—å—é
                    try:
                        preview_response = requests.head(template['preview_url'], timeout=10)
                        print(f"   üìÑ Preview –¥–æ—Å—Ç—É–ø–µ–Ω: {preview_response.status_code}")
                        print(f"   üìÑ Content-Type: {preview_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                    except Exception as e:
                        print(f"   ‚ùå Preview –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
                        
                else:
                    print(f"   ‚ùå Preview URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –ø–æ–ª—è –ø—Ä–µ–≤—å—é
                preview_fields = ['preview_path', 'preview_filename', 'has_preview']
                for field in preview_fields:
                    if field in template:
                        print(f"   {field}: {template[field]}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: {response.text}")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    print(f"\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é")
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Ç–µ—Å—Ç–∞
    if templates:
        test_template = templates[0]
        template_id = test_template.get('id')
        
        print(f"üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è —à–∞–±–ª–æ–Ω–∞: {template_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoint –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é
        preview_endpoints = [
            f"/api/templates/{template_id}/preview",
            f"/api/preview/{template_id}",
            f"/preview/{template_id}"
        ]
        
        for endpoint in preview_endpoints:
            try:
                print(f"\n   üîç –ü—Ä–æ–≤–µ—Ä—è—é endpoint: {endpoint}")
                response = requests.get(f"{BASE_URL}{endpoint}", timeout=30)
                print(f"   Status: {response.status_code}")
                
                if response.status_code == 200:
                    content_type = response.headers.get('content-type', '')
                    print(f"   ‚úÖ –ü—Ä–µ–≤—å—é –¥–æ—Å—Ç—É–ø–Ω–æ!")
                    print(f"   üìÑ Content-Type: {content_type}")
                    
                    if 'image' in content_type:
                        print(f"   üñºÔ∏è –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
                    elif 'svg' in content_type:
                        print(f"   üé® –≠—Ç–æ SVG!")
                    else:
                        print(f"   üìÑ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
                        
                elif response.status_code == 404:
                    print(f"   ‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"   ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: {response.status_code}")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def test_preview_generation_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é"""
    
    print(f"\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é")
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ endpoints –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é
    endpoints_to_test = [
        "/api/generate/preview",
        "/api/templates/generate-preview", 
        "/api/preview/generate"
    ]
    
    test_data = {
        "template_id": "propertyimage2",
        "width": 400,
        "height": 600
    }
    
    for endpoint in endpoints_to_test:
        try:
            print(f"\n   üîç –¢–µ—Å—Ç–∏—Ä—É—é: {endpoint}")
            response = requests.post(f"{BASE_URL}{endpoint}", json=test_data, timeout=30)
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    result = response.json()
                    print(f"   ‚úÖ –ü—Ä–µ–≤—å—é —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ!")
                    print(f"   üìÑ –û—Ç–≤–µ—Ç: {json.dumps(result, indent=2)[:200]}...")
                except:
                    print(f"   ‚úÖ –ü—Ä–µ–≤—å—é —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ (–Ω–µ JSON)")
                    
            elif response.status_code == 404:
                print(f"   ‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: {response.status_code}")
                print(f"   üìÑ –û—Ç–≤–µ—Ç: {response.text[:100]}...")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_template_previews()
    test_preview_generation_api()
    
    print(f"\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!")