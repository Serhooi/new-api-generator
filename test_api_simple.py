#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –±–µ–∑ curl - —á–µ—Ä–µ–∑ requests
"""

import requests
import json
import time

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PNG"""
    
    print("üöÄ –¢–ï–°–¢ API –ì–ï–ù–ï–†–ê–¶–ò–ò PNG")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    data = {
        "main_template_id": "1",
        "photo_template_id": "2", 
        "format": "png",
        "replacements": {
            "dyno.address": "123 Test Street",
            "dyno.price": "$750,000",
            "dyno.beds": "3",
            "dyno.baths": "2"
        }
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å...")
        
        response = requests.post(
            'http://localhost:5003/api/generate/carousel',
            json=data,
            timeout=30
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            
            if 'image_urls' in result:
                print(f"üñºÔ∏è –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(result['image_urls'])}")
                
                for i, url in enumerate(result['image_urls']):
                    print(f"üì∑ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {i+1}: {url}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ PNG
                    if '.png' in url:
                        print(f"‚úÖ –§–æ—Ä–º–∞—Ç PNG –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω")
                        
                        # –ü—Ä–æ–±—É–µ–º —Å–∫–∞—á–∞—Ç—å
                        try:
                            img_resp = requests.get(url, timeout=10)
                            if img_resp.status_code == 200:
                                size = len(img_resp.content)
                                print(f"üìä –†–∞–∑–º–µ—Ä: {size} bytes")
                                
                                if size > 10000:  # –ë–æ–ª—å—à–µ 10KB
                                    print(f"‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
                                else:
                                    print(f"‚ö†Ô∏è –ú–∞–ª–µ–Ω—å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {e}")
                
                return True
            else:
                print("‚ùå –ù–µ—Ç image_urls –≤ –æ—Ç–≤–µ—Ç–µ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5003")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    return False

if __name__ == "__main__":
    success = test_api()
    
    if success:
        print("\nüéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!")
        print("‚úÖ PNG —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
        print("‚úÖ Playwright —Å–æ–∑–¥–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        print("‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç PNG –≤–º–µ—Å—Ç–æ –±–µ–ª—ã—Ö –ø—É—Å—Ç—ã—à–µ–∫")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å API, –Ω–æ PNG —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("–í–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")