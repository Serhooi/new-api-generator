#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
"""

import requests
import json
import time

def test_api_call():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –≤—ã–∑–æ–≤"""
    
    print("üß™ –¢–ï–°–¢ API –í–´–ó–û–í–ê")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_data = {
        "dyno.agentName": "–¢–µ—Å—Ç –ê–≥–µ–Ω—Ç",
        "dyno.agentPhone": "+1234567890", 
        "dyno.agentEmail": "test@example.com",
        "dyno.price": "$500,000",
        "dyno.propertyAddress": "123 Test Street",
        "dyno.bedrooms": "3",
        "dyno.bathrooms": "2",
        "dyno.date": "Aug 12, 2025",
        "dyno.time": "2:00 PM",
        "dyno.propertyimage": "https://images.unsplash.com/photo-1570129477492-45c003edd2be?w=400&h=300",
        "dyno.propertyimage2": "https://images.unsplash.com/photo-1564013799919-ab600027ffc6?w=400&h=300", 
        "dyno.agentheadshot": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=120&h=120&fit=crop&crop=face",
        "dyno.logo": "https://images.unsplash.com/photo-1599305445671-ac291c95aaa9?w=142&h=56",
        "dyno.propertyfeatures": "–ë–∞—Å—Å–µ–π–Ω, –≥–∞—Ä–∞–∂, —Å–∞–¥"
    }
    
    print("üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã")
    print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {len([k for k in test_data.keys() if 'image' in k or 'headshot' in k or 'logo' in k])} —à—Ç.")
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏...")
        
        response = requests.post(
            'http://localhost:5000/api/carousel/create-and-generate',
            json=test_data,
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üÜî ID –∫–∞—Ä—É—Å–µ–ª–∏: {result.get('carousel_id', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–ª–∞–π–¥—ã
            slides = result.get('slides', [])
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —Å–ª–∞–π–¥–æ–≤: {len(slides)}")
            
            for i, slide in enumerate(slides):
                slide_type = slide.get('type', 'unknown')
                slide_url = slide.get('url', 'N/A')
                print(f"   {i+1}. {slide_type}: {slide_url[:80]}...")
            
            print(f"\nüéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù! –ö–∞—Ä—É—Å–µ–ª—å: {result.get('carousel_id')}")
            return True
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 app.py")
        return False
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (>60 —Å–µ–∫)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç"""
    
    print("üöÄ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ API")
    print("=" * 60)
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python3 app.py")
    print()
    
    success = test_api_call()
    
    print("\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    
    if success:
        print("\n‚úÖ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!")
        print("üìã –ü–†–û–í–ï–†–¨–¢–ï:")
        print("1. Headshot –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ (–Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π)")
        print("2. Photo —Å–ª–∞–π–¥ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å dyno.propertyimage2")
        print("3. Main —Å–ª–∞–π–¥ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å dyno.propertyimage")
    else:
        print("\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´")
        print("üìã –ü–†–û–í–ï–†–¨–¢–ï:")
        print("1. –ó–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä: python3 app.py")
        print("2. –ù–µ—Ç –ª–∏ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞")

if __name__ == "__main__":
    main()