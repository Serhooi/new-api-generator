#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–º–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —Å PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–µ–π
"""

import subprocess
import os

def test_smart_cleaned_png():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —É–º–Ω–æ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ SVG"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —É–º–Ω–æ –æ—á–∏—â–µ–Ω–Ω–æ–≥–æ SVG...")
    
    svg_file = 'smart_cleaned_main.svg'
    png_file = 'smart_cleaned_main.png'
    
    if not os.path.exists(svg_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {svg_file}")
        return False
    
    # –ß–∏—Ç–∞–µ–º SVG
    with open(svg_file, 'r') as f:
        svg_content = f.read()
    
    print(f"üìä –†–∞–∑–º–µ—Ä SVG: {len(svg_content)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ rsvg-convert
        result = subprocess.run(
            ["rsvg-convert", "-w", "400"],
            input=svg_content.encode("utf-8"),
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            timeout=30
        )
        
        if result.returncode == 0:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º PNG
            with open(png_file, 'wb') as f:
                f.write(result.stdout)
            
            png_size = len(result.stdout)
            print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: {png_file} ({png_size} –±–∞–π—Ç)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
            if os.path.exists(png_file) and os.path.getsize(png_file) > 0:
                print("‚úÖ PNG —Ñ–∞–π–ª –≤–∞–ª–∏–¥–Ω—ã–π —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏!")
                return True
            else:
                print("‚ùå PNG —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π")
                return False
        else:
            print(f"‚ùå rsvg-convert –æ—à–∏–±–∫–∞: {result.stderr.decode()}")
            print("üîç –í–æ–∑–º–æ–∂–Ω–æ, –≤—Å–µ –µ—â–µ –µ—Å—Ç—å XML –ø—Ä–æ–±–ª–µ–º—ã...")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = test_smart_cleaned_png()
    
    if success:
        print("\nüéâ –£–ú–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –†–ê–ë–û–¢–ê–ï–¢! PNG —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω!")
    else:
        print("\n‚ùå –£–º–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–µ —Ä–µ—à–∏–ª–∞ XML –ø—Ä–æ–±–ª–µ–º—ã...")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–µ–≥–æ–≤")