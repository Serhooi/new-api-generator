#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
"""
import requests
import json

BASE_URL = "https://new-api-generator.onrender.com"

def test_detailed_png():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    
    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "main_template_id": "propertyimage2",
        "photo_template_id": "propertyimage2",
        "data": {
            "address": "123 Test Street, Beverly Hills, CA 90210",
            "price": "$500,000",
            "beds": "3",
            "baths": "2",
            "sqft": "1,500",
            "agent_name": "Test Agent",
            "agent_phone": "(555) 123-4567",
            "agent_email": "test@example.com"
        }
    }
    
    # 1. –¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ endpoint —Å format: png
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel —Å format: 'png'")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel",
            json={**test_data, "format": "png"},
            timeout=60
        )
        
        print(f"Status: {response.status_code}")
        print(f"Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                print(json.dumps(result, indent=2, ensure_ascii=False))
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                if 'format' in result:
                    print(f"‚úÖ Format: {result['format']}")
                
                if 'url' in result and result['url']:
                    print(f"‚úÖ URL –Ω–∞–π–¥–µ–Ω: {result['url']}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞
                    file_response = requests.head(result['url'])
                    print(f"–§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω: {file_response.status_code}")
                    print(f"Content-Type: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                    
                    if '.png' in result['url']:
                        print(f"‚úÖ URL —Å–æ–¥–µ—Ä–∂–∏—Ç .png")
                    else:
                        print(f"‚ùå URL –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç .png")
                        
                else:
                    print(f"‚ùå URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –ø—É—Å—Ç–æ–π")
                    
                if 'error' in result:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ: {result['error']}")
                    
            except json.JSONDecodeError:
                print(f"‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON:")
                print(response.text[:500])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 2. –¢–µ—Å—Ç PNG-simple endpoint
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel-png-simple")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel-png-simple",
            json=test_data,
            timeout=60
        )
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                print(json.dumps(result, indent=2, ensure_ascii=False))
                
                if 'url' in result and result['url']:
                    print(f"‚úÖ URL –Ω–∞–π–¥–µ–Ω: {result['url']}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–∞
                    file_response = requests.head(result['url'])
                    print(f"–§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω: {file_response.status_code}")
                    print(f"Content-Type: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                else:
                    print(f"‚ùå URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                    
            except json.JSONDecodeError:
                print(f"‚ùå –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è JSON:")
                print(response.text[:500])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_detailed_png()