#!/usr/bin/env python3
"""
–°–ò–°–¢–ï–ú–ê –†–£–ß–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò –ü–†–ï–í–¨–Æ
=============================

–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–µ —Å SVG —à–∞–±–ª–æ–Ω–∞–º–∏
"""

import os
import uuid
from PIL import Image
import io

def save_preview_image(preview_file, template_id):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    
    Args:
        preview_file: –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏–∑ Flask request.files)
        template_id: ID —à–∞–±–ª–æ–Ω–∞
    
    Returns:
        dict —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º –ø—Ä–µ–≤—å—é
    """
    try:
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è—é –ø—Ä–µ–≤—å—é –¥–ª—è —à–∞–±–ª–æ–Ω–∞ {template_id}")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–µ–≤—å—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        preview_dir = os.path.join('output', 'template_previews')
        os.makedirs(preview_dir, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        file_extension = preview_file.filename.split('.')[-1].lower()
        if file_extension not in ['jpg', 'jpeg', 'png', 'webp']:
            file_extension = 'png'
        
        preview_filename = f"template_{template_id}_preview.{file_extension}"
        preview_path = os.path.join(preview_dir, preview_filename)
        
        # –ß–∏—Ç–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        image_data = preview_file.read()
        img = Image.open(io.BytesIO(image_data))
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if img.mode in ('RGBA', 'LA', 'P'):
            background = Image.new('RGB', img.size, (255, 255, 255))
            if img.mode == 'P':
                img = img.convert('RGBA')
            if img.mode in ('RGBA', 'LA'):
                background.paste(img, mask=img.split()[-1])
                img = background
        
        # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä (–º–∞–∫—Å–∏–º—É–º 800x600)
        max_size = (800, 600)
        if img.size[0] > max_size[0] or img.size[1] > max_size[1]:
            img.thumbnail(max_size, Image.Resampling.LANCZOS)
            print(f"   üìè –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –¥–æ {img.size}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ PNG –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
        img.save(preview_path, 'PNG', optimize=True)
        
        file_size = os.path.getsize(preview_path)
        
        print(f"‚úÖ –ü—Ä–µ–≤—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {preview_path} ({file_size} –±–∞–π—Ç)")
        
        return {
            'success': True,
            'filename': preview_filename,
            'path': preview_path,
            'url': f'/output/template_previews/{preview_filename}',
            'width': img.size[0],
            'height': img.size[1],
            'file_size': file_size
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—å—é: {e}")
        return {
            'success': False,
            'error': str(e)
        }

def get_template_preview_url(template_id):
    """
    –ü–æ–ª—É—á–∞–µ—Ç URL –ø—Ä–µ–≤—å—é –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    
    Args:
        template_id: ID —à–∞–±–ª–æ–Ω–∞
    
    Returns:
        URL –ø—Ä–µ–≤—å—é –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    """
    preview_dir = os.path.join('output', 'template_previews')
    
    # –ò—â–µ–º —Ñ–∞–π–ª –ø—Ä–µ–≤—å—é –¥–ª—è —ç—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    possible_extensions = ['png', 'jpg', 'jpeg', 'webp']
    
    for ext in possible_extensions:
        preview_filename = f"template_{template_id}_preview.{ext}"
        preview_path = os.path.join(preview_dir, preview_filename)
        
        if os.path.exists(preview_path):
            return f'/output/template_previews/{preview_filename}'
    
    return None

def delete_template_preview(template_id):
    """
    –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–∞
    
    Args:
        template_id: ID —à–∞–±–ª–æ–Ω–∞
    
    Returns:
        bool - —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
    """
    try:
        preview_dir = os.path.join('output', 'template_previews')
        possible_extensions = ['png', 'jpg', 'jpeg', 'webp']
        
        deleted = False
        for ext in possible_extensions:
            preview_filename = f"template_{template_id}_preview.{ext}"
            preview_path = os.path.join(preview_dir, preview_filename)
            
            if os.path.exists(preview_path):
                os.remove(preview_path)
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–≤—å—é: {preview_filename}")
                deleted = True
        
        return deleted
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–≤—å—é: {e}")
        return False

def validate_preview_image(preview_file):
    """
    –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é
    
    Args:
        preview_file: –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    
    Returns:
        dict —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 5MB)
        max_size = 5 * 1024 * 1024  # 5MB
        preview_file.seek(0, 2)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
        file_size = preview_file.tell()
        preview_file.seek(0)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ
        
        if file_size > max_size:
            return {
                'valid': False,
                'error': f'–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: {file_size / 1024 / 1024:.1f}MB (–º–∞–∫—Å–∏–º—É–º 5MB)'
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        try:
            img = Image.open(preview_file)
            width, height = img.size
            format_name = img.format
            preview_file.seek(0)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            if width < 100 or height < 100:
                return {
                    'valid': False,
                    'error': f'–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ: {width}x{height} (–º–∏–Ω–∏–º—É–º 100x100)'
                }
            
            return {
                'valid': True,
                'width': width,
                'height': height,
                'format': format_name,
                'file_size': file_size
            }
            
        except Exception as img_error:
            return {
                'valid': False,
                'error': f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(img_error)}'
            }
        
    except Exception as e:
        return {
            'valid': False,
            'error': f'–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}'
        }

def create_default_preview(template_name, template_id):
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø—Ä–µ–≤—å—é –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    
    Args:
        template_name: –ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        template_id: ID —à–∞–±–ª–æ–Ω–∞
    
    Returns:
        dict —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º –ø—Ä–µ–≤—å—é
    """
    try:
        from PIL import Image, ImageDraw, ImageFont
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É
        width, height = 400, 300
        img = Image.new('RGB', (width, height), color='#f8f9fa')
        draw = ImageDraw.Draw(img)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π —à—Ä–∏—Ñ—Ç
            font = ImageFont.truetype('/System/Library/Fonts/Arial.ttf', 24)
        except:
            try:
                font = ImageFont.truetype('arial.ttf', 24)
            except:
                font = ImageFont.load_default()
        
        # –†–∏—Å—É–µ–º —Ä–∞–º–∫—É
        draw.rectangle([10, 10, width-10, height-10], outline='#dee2e6', width=2)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        text_lines = [
            "üìÑ Template Preview",
            template_name[:30] + "..." if len(template_name) > 30 else template_name,
            "Upload custom preview image"
        ]
        
        y_offset = height // 2 - 40
        for line in text_lines:
            bbox = draw.textbbox((0, 0), line, font=font)
            text_width = bbox[2] - bbox[0]
            x = (width - text_width) // 2
            draw.text((x, y_offset), line, fill='#6c757d', font=font)
            y_offset += 30
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        preview_dir = os.path.join('output', 'template_previews')
        os.makedirs(preview_dir, exist_ok=True)
        
        preview_filename = f"template_{template_id}_preview.png"
        preview_path = os.path.join(preview_dir, preview_filename)
        
        img.save(preview_path, 'PNG')
        file_size = os.path.getsize(preview_path)
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø—Ä–µ–≤—å—é: {preview_filename}")
        
        return {
            'success': True,
            'filename': preview_filename,
            'url': f'/output/template_previews/{preview_filename}',
            'is_default': True,
            'file_size': file_size
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é: {e}")
        return {
            'success': False,
            'error': str(e)
        }

def main():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ä—É—á–Ω—ã—Ö –ø—Ä–µ–≤—å—é"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –†–£–ß–ù–´–• –ü–†–ï–í–¨–Æ")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –ø—Ä–µ–≤—å—é
    test_template_id = "test-template-123"
    test_template_name = "Test Template Name"
    
    result = create_default_preview(test_template_name, test_template_id)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—Ä–µ–≤—å—é: {result}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ URL
    preview_url = get_template_preview_url(test_template_id)
    print(f"URL –ø—Ä–µ–≤—å—é: {preview_url}")

if __name__ == "__main__":
    main()