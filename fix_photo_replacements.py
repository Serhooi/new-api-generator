#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å photo replacements –≤ app.py
"""

def fix_photo_replacements():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º app.py —á—Ç–æ–±—ã photo –ø—Ä–µ–≤—å—é –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ dyno.propertyimage"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é photo replacements –≤ app.py...")
    
    # –ß–∏—Ç–∞–µ–º app.py
    with open('app.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ (–≤ —Ñ—É–Ω–∫—Ü–∏–∏ preview_carousel)
    old_pattern1 = """        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –æ–±–æ–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
        main_preview = create_preview_with_data(main_svg, replacements, preview_type)
        photo_preview = create_preview_with_data(photo_svg, replacements, preview_type)
        
        return jsonify({
            'success': True,
            'main_preview': {
                'template_name': main_name,
                'template_id': main_template_id,"""
    
    new_pattern1 = """        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –æ–±–æ–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
        main_preview = create_preview_with_data(main_svg, replacements, preview_type)
        
        # –î–ª—è photo –ø—Ä–µ–≤—å—é —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ replacements —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        photo_replacements = {}
        for key, value in replacements.items():
            # –ò—Å–∫–ª—é—á–∞–µ–º dyno.propertyimage (—ç—Ç–æ –¥–ª—è main —Å–ª–∞–π–¥–∞)
            if key != 'dyno.propertyimage':
                photo_replacements[key] = value
        
        print(f"üîç Photo –ø—Ä–µ–≤—å—é replacements: {list(photo_replacements.keys())}")
        photo_preview = create_preview_with_data(photo_svg, photo_replacements, preview_type)
        
        return jsonify({
            'success': True,
            'main_preview': {
                'template_name': main_name,
                'template_id': main_template_id,"""
    
    # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
    if old_pattern1 in content:
        content = content.replace(old_pattern1, new_pattern1, 1)
        print("‚úÖ –ü–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ (preview_carousel)")
    else:
        print("‚ùå –ü–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º –≤—Ç–æ—Ä–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
    old_pattern2 = """        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –æ–±–æ–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
        main_preview = create_preview_with_data(main_svg, replacements, preview_type)
        photo_preview = create_preview_with_data(photo_svg, replacements, preview_type)
        
        return jsonify({
            'success': True,
            'main_preview': {
                'template_name': main_name,
                'template_id': main_template_id,
                **main_preview
            },
            'photo_preview': {
                'template_name': photo_name,
                'template_id': photo_template_id,
                **photo_preview
            }
        })"""
    
    new_pattern2 = """        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –æ–±–æ–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤
        main_preview = create_preview_with_data(main_svg, replacements, preview_type)
        
        # –î–ª—è photo –ø—Ä–µ–≤—å—é —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–µ replacements —Ç–æ–ª—å–∫–æ —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        photo_replacements = {}
        for key, value in replacements.items():
            # –ò—Å–∫–ª—é—á–∞–µ–º dyno.propertyimage (—ç—Ç–æ –¥–ª—è main —Å–ª–∞–π–¥–∞)
            if key != 'dyno.propertyimage':
                photo_replacements[key] = value
        
        print(f"üîç Photo –ø—Ä–µ–≤—å—é replacements: {list(photo_replacements.keys())}")
        photo_preview = create_preview_with_data(photo_svg, photo_replacements, preview_type)
        
        return jsonify({
            'success': True,
            'main_preview': {
                'template_name': main_name,
                'template_id': main_template_id,
                **main_preview
            },
            'photo_preview': {
                'template_name': photo_name,
                'template_id': photo_template_id,
                **photo_preview
            }
        })"""
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Ç–æ—Ä–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
    if old_pattern2 in content:
        content = content.replace(old_pattern2, new_pattern2, 1)
        print("‚úÖ –í—Ç–æ—Ä–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        print("‚ùå –í—Ç–æ—Ä–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('app.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ app.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!")

if __name__ == "__main__":
    fix_photo_replacements()