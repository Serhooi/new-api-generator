#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–≤—å—é –∏–∑ SVG
"""

import sys
import os
sys.path.append('.')

from app import generate_svg_preview, create_preview_svg

def test_preview_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é"""
    print("üß™ –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –ü–†–ï–í–¨–Æ")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π SVG —Å dyno –ø–æ–ª—è–º–∏
    test_svg = '''<?xml version="1.0" encoding="UTF-8"?>
<svg width="800" height="600" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <rect width="800" height="600" fill="#f8f9fa"/>
  
  <text x="400" y="100" text-anchor="middle" fill="#2c3e50" font-family="Inter" font-size="24">
    <tspan x="400" y="100">dyno.agentName</tspan>
  </text>
  
  <text x="400" y="200" text-anchor="middle" fill="#e74c3c" font-family="Inter" font-size="32">
    <tspan x="400" y="200">dyno.price</tspan>
  </text>
  
  <text x="400" y="300" text-anchor="middle" fill="#7f8c8d" font-family="Inter" font-size="16">
    <tspan x="400" y="300">dyno.propertyAddress</tspan>
  </text>
  
  <text x="400" y="400" text-anchor="middle" fill="#27ae60" font-family="Inter" font-size="18">
    <tspan x="400" y="400">dyno.bedrooms beds, dyno.bathrooms baths</tspan>
  </text>
</svg>'''
    
    print("üìù –¢–µ—Å—Ç–æ–≤—ã–π SVG —Å–æ–∑–¥–∞–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é SVG
    print("\nüé® –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é SVG...")
    preview_svg = create_preview_svg(test_svg)
    
    print("‚úÖ –ü—Ä–µ–≤—å—é SVG —Å–æ–∑–¥–∞–Ω")
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –∑–∞–º–µ–Ω—ã:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ dyno –ø–æ–ª—è –∑–∞–º–µ–Ω–∏–ª–∏—Å—å
    if 'John Smith' in preview_svg:
        print("   ‚úÖ dyno.agentName –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ John Smith")
    else:
        print("   ‚ùå dyno.agentName –ù–ï –∑–∞–º–µ–Ω–µ–Ω")
    
    if '$450,000' in preview_svg:
        print("   ‚úÖ dyno.price –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ $450,000")
    else:
        print("   ‚ùå dyno.price –ù–ï –∑–∞–º–µ–Ω–µ–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PNG
    print("\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PNG –ø—Ä–µ–≤—å—é...")
    template_id = "test-template-123"
    
    try:
        result = generate_svg_preview(preview_svg, template_id)
        
        if result['success']:
            print(f"‚úÖ PNG –ø—Ä–µ–≤—å—é —Å–æ–∑–¥–∞–Ω: {result['filename']}")
            print(f"üìÅ –ü—É—Ç—å: {result['path']}")
            print(f"üåê URL: {result['url']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if os.path.exists(result['path']):
                file_size = os.path.getsize(result['path'])
                print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
            else:
                print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PNG: {result['error']}")
    
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
    
    print("\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    test_preview_generation()