#!/usr/bin/env python3
"""
–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ aspect ratio - —Ç–æ–ª—å–∫–æ –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

def fix_aspect_ratio_properly():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º aspect ratio –ø—Ä–∞–≤–∏–ª—å–Ω–æ - —Ç–æ–ª—å–∫–æ –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    print("üîß –ü–†–ê–í–ò–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ASPECT RATIO")
    print("=" * 45)
    
    with open('app.py', 'r') as f:
        content = f.read()
    
    # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –∑–∞–º–µ–Ω—É
    content = content.replace('preserveAspectRatio="xMidYMid slice"', 'preserveAspectRatio="none"')
    print("‚Ü©Ô∏è –û—Ç–∫–∞—Ç–∏–ª –≥–ª–æ–±–∞–ª—å–Ω—É—é –∑–∞–º–µ–Ω—É aspect ratio")
    
    # –ò—â–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    # –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≥–¥–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —á—Ç–æ —ç—Ç–æ property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    
    # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if 'def process_image_replacement' in content:
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_image_replacement")
        
        # –ò—â–µ–º –≥–¥–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è aspect ratio –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        old_property_logic = '''                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º aspect ratio –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if image_type == "property":
                        aspect_ratio = "xMidYMid slice"
                    else:
                        aspect_ratio = "none"'''
        
        new_property_logic = '''                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º aspect ratio –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if image_type == "property":
                        aspect_ratio = "xMidYMid slice"  # Property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω—è—é—Ç –æ–±–ª–∞—Å—Ç—å
                    elif "headshot" in dyno_field.lower() or "agent" in dyno_field.lower():
                        aspect_ratio = "xMidYMid meet"  # Headshot —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏
                    else:
                        aspect_ratio = "none"  # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—Ç—Å—è'''
        
        if old_property_logic in content:
            content = content.replace(old_property_logic, new_property_logic)
            print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ aspect ratio –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
        else:
            print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –ª–æ–≥–∏–∫–∞ aspect ratio")
            
            # –ò—â–µ–º –≥–¥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è image —ç–ª–µ–º–µ–Ω—Ç
            old_image_creation = '''                    image_element.set('preserveAspectRatio', 'none')'''
            
            new_image_creation = '''                    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π aspect ratio
                    if image_type == "property":
                        image_element.set('preserveAspectRatio', 'xMidYMid slice')  # Property –∑–∞–ø–æ–ª–Ω—è–µ—Ç
                    elif "headshot" in dyno_field.lower() or "agent" in dyno_field.lower():
                        image_element.set('preserveAspectRatio', 'xMidYMid meet')   # Headshot –≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
                    else:
                        image_element.set('preserveAspectRatio', 'none')  # –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—Ç—Å—è'''
            
            if old_image_creation in content:
                content = content.replace(old_image_creation, new_image_creation)
                print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ aspect ratio –≤ —Å–æ–∑–¥–∞–Ω–∏–µ image —ç–ª–µ–º–µ–Ω—Ç–∞")
            else:
                print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è image —ç–ª–µ–º–µ–Ω—Ç–∞")
    
    # –¢–∞–∫–∂–µ –∏—â–µ–º –≤ —à–∞–±–ª–æ–Ω–∞—Ö –≥–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å preserveAspectRatio
    # –î–ª—è headshot –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å "meet" –∞ –Ω–µ "slice"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    with open('app.py', 'w') as f:
        f.write(content)
    
    print("üíæ app.py –æ–±–Ω–æ–≤–ª–µ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º aspect ratio")
    
    print("\nüìã –ü–†–ê–í–ò–õ–ê ASPECT RATIO:")
    print("üè† Property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: 'xMidYMid slice' - –∑–∞–ø–æ–ª–Ω—è—é—Ç –æ–±–ª–∞—Å—Ç—å, –æ–±—Ä–µ–∑–∞—é—Ç—Å—è")
    print("üë§ Agent headshot: 'xMidYMid meet' - –≤–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é, –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª—è")
    print("üñºÔ∏è –û—Å—Ç–∞–ª—å–Ω—ã–µ: 'none' - —Ä–∞—Å—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä")
    
    return True

def check_current_aspect_ratio():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ aspect ratio"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ò–• –ù–ê–°–¢–†–û–ï–ö")
    print("=" * 30)
    
    with open('app.py', 'r') as f:
        content = f.read()
    
    # –ò—â–µ–º –≤—Å–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è preserveAspectRatio
    import re
    
    aspect_ratios = re.findall(r'preserveAspectRatio["\s]*=["\s]*([^"\'>\s]+)', content)
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(aspect_ratios)} –Ω–∞—Å—Ç—Ä–æ–µ–∫ aspect ratio:")
    
    for i, ratio in enumerate(set(aspect_ratios)):
        count = aspect_ratios.count(ratio)
        print(f"  {i+1}. '{ratio}' - {count} —Ä–∞–∑(–∞)")
    
    # –ò—â–µ–º –ª–æ–≥–∏–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    if 'image_type == "property"' in content:
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    else:
        print("‚ö†Ô∏è –õ–æ–≥–∏–∫–∞ –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    if 'headshot' in content.lower():
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è headshot")
    else:
        print("‚ö†Ô∏è –£–ø–æ–º–∏–Ω–∞–Ω–∏—è headshot –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

if __name__ == "__main__":
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    check_current_aspect_ratio()
    
    print("\n" + "="*50)
    
    # –ó–∞—Ç–µ–º –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
    fix_aspect_ratio_properly()
    
    print("\n‚úÖ Aspect ratio –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    print("üîÑ –ù—É–∂–Ω–æ redeploy –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")