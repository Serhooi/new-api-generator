#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç dyno.propertyimage2
"""

import sqlite3
import re

DATABASE_PATH = 'templates.db'

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ dyno.propertyimage2"""
    
    print("‚ö° –ë–´–°–¢–†–´–ô –¢–ï–°–¢ DYNO.PROPERTYIMAGE2")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º photo —à–∞–±–ª–æ–Ω
    conn = sqlite3.connect(DATABASE_PATH)
    cursor = conn.cursor()
    
    cursor.execute("SELECT id, name, svg_content FROM templates WHERE template_role = 'photo' AND category = 'uploaded' LIMIT 1")
    result = cursor.fetchone()
    
    if not result:
        print("‚ùå –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π photo —à–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    template_id, name, svg_content = result
    print(f"üìÑ –¢–µ—Å—Ç–∏—Ä—É—é: {name}")
    
    # –ò—â–µ–º dyno.propertyimage2
    element_pattern = r'<g[^>]*id="dyno\.propertyimage2"[^>]*>(.*?)</g>'
    match = re.search(element_pattern, svg_content, re.DOTALL)
    
    if match:
        print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ dyno.propertyimage2")
        
        group_content = match.group(1)
        
        # –ò—â–µ–º fill –≤ –≥—Ä—É–ø–ø–µ
        fill_match = re.search(r'fill="url\(#([^)]+)\)"', group_content)
        if fill_match:
            pattern_id = fill_match.group(1)
            print(f"‚úÖ Pattern –Ω–∞–π–¥–µ–Ω: {pattern_id}")
            
            # –ò—â–µ–º pattern –±–ª–æ–∫
            pattern_pattern = f'<pattern[^>]*id="{re.escape(pattern_id)}"[^>]*>(.*?)</pattern>'
            pattern_match = re.search(pattern_pattern, svg_content, re.DOTALL)
            
            if pattern_match:
                print("‚úÖ Pattern –±–ª–æ–∫ –Ω–∞–π–¥–µ–Ω")
                
                pattern_content = pattern_match.group(1)
                
                # –ò—â–µ–º image –≤ pattern
                if '<image' in pattern_content:
                    print("‚úÖ Image —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –≤ pattern")
                    
                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–º–µ–Ω—É
                    test_url = "https://test.com/image.jpg"
                    
                    # –ó–∞–º–µ–Ω—è–µ–º href
                    new_pattern_content = re.sub(r'href="[^"]*"', f'href="{test_url}"', pattern_content)
                    
                    if test_url in new_pattern_content:
                        print("‚úÖ –ó–ê–ú–ï–ù–ê –†–ê–ë–û–¢–ê–ï–¢!")
                        print(f"   –ù–æ–≤—ã–π URL: {test_url}")
                    else:
                        print("‚ùå –ó–∞–º–µ–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                else:
                    print("‚ùå Image —ç–ª–µ–º–µ–Ω—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ pattern")
            else:
                print("‚ùå Pattern –±–ª–æ–∫ –ù–ï –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå Fill —Å pattern –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ")
    else:
        print("‚ùå –ì—Ä—É–ø–ø–∞ dyno.propertyimage2 –ù–ï –Ω–∞–π–¥–µ–Ω–∞")
    
    conn.close()

if __name__ == "__main__":
    quick_test()