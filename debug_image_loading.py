#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

import requests
import time

def test_image_urls():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    
    print("üß™ –¢–ï–°–¢ –î–û–°–¢–£–ü–ù–û–°–¢–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 50)
    
    test_urls = [
        "https://images.unsplash.com/photo-1570129477492-45c003edd2be?w=400&h=300",
        "https://images.unsplash.com/photo-1564013799919-ab600027ffc6?w=400&h=300", 
        "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=120&h=120&fit=crop&crop=face",
        "https://images.unsplash.com/photo-1599305445671-ac291c95aaa9?w=142&h=56"
    ]
    
    for i, url in enumerate(test_urls, 1):
        print(f"\nüì• –¢–µ—Å—Ç {i}: {url[:50]}...")
        
        try:
            response = requests.get(url, timeout=10, headers={
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'
            })
            
            if response.status_code == 200:
                size = len(response.content)
                print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ: {size} –±–∞–π—Ç")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                content_type = response.headers.get('content-type', '')
                if 'image' in content_type:
                    print(f"‚úÖ –¢–∏–ø: {content_type}")
                else:
                    print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø: {content_type}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
        except requests.exceptions.Timeout:
            print("‚ùå –¢–∞–π–º–∞—É—Ç")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_download_and_convert():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é download_and_convert_image"""
    
    print("\nüß™ –¢–ï–°–¢ –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 50)
    
    try:
        from preview_system import download_and_convert_image
        
        test_url = "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=120&h=120&fit=crop&crop=face"
        
        print(f"üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é: {test_url[:50]}...")
        
        result = download_and_convert_image(test_url)
        
        if result and result.startswith('data:image/'):
            print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ base64: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìã –ù–∞—á–∞–ª–æ: {result[:50]}...")
        else:
            print(f"‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {result}")
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    
    print("üöÄ –û–¢–õ–ê–î–ö–ê –ó–ê–ì–†–£–ó–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô")
    print("=" * 60)
    
    test_image_urls()
    test_download_and_convert()
    
    print("\nüéØ –û–¢–õ–ê–î–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")

if __name__ == "__main__":
    main()