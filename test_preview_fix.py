#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–µ–≤—å—é
"""

import requests
import json

def test_preview_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API –ø—Ä–µ–≤—å—é"""
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –ü–†–ï–í–¨–Æ")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 5002
    import subprocess
    import time
    import os
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env = os.environ.copy()
    env['SUPABASE_URL'] = 'https://vahgmyuowsilbxqdjjii.supabase.co'
    env['SUPABASE_SERVICE_ROLE_KEY'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZhaGdteXVvd3NpbGJ4cWRqamlpIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NTI1MDIxOSwiZXhwIjoyMDYwODI2MjE5fQ.7pfeWV0cnKALRb1IGYrhUQL68ggywFG6MetKc8DPvbE'
    
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 5002...")
    
    # –ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç –≤ app.py –≤—Ä–µ–º–µ–Ω–Ω–æ
    with open('app.py', 'r') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç
    content_with_port = content.replace("app.run(debug=True, host='0.0.0.0', port=5000)", 
                                       "app.run(debug=True, host='0.0.0.0', port=5002)")
    
    with open('app_test.py', 'w') as f:
        f.write(content_with_port)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    try:
        process = subprocess.Popen(['python3', 'app_test.py'], env=env)
        time.sleep(5)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º health
        try:
            response = requests.get('http://localhost:5002/api/health', timeout=5)
            print(f"üè• Health: {response.status_code}")
            
            if response.status_code == 200:
                health_data = response.json()
                print(f"‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {health_data}")
                
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
                templates_response = requests.get('http://localhost:5002/api/templates/all-previews', timeout=10)
                print(f"üìã Templates: {templates_response.status_code}")
                
                if templates_response.status_code == 200:
                    templates_data = templates_response.json()
                    templates = templates_data.get('templates', [])
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —à–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ
                    for i, template in enumerate(templates[:3]):
                        print(f"  {i+1}. {template.get('name')} - {template.get('preview_url')}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–≤—å—é
                        preview_url = f"http://localhost:5002{template.get('preview_url')}"
                        try:
                            preview_response = requests.head(preview_url, timeout=5)
                            print(f"     –ü—Ä–µ–≤—å—é: {preview_response.status_code}")
                        except:
                            print(f"     –ü—Ä–µ–≤—å—é: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
                
                return True
            else:
                print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
            return False
            
    finally:
        # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        try:
            process.terminate()
            process.wait(timeout=5)
        except:
            process.kill()
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove('app_test.py')
        except:
            pass

if __name__ == "__main__":
    success = test_preview_api()
    if success:
        print("\nüéâ –ü–†–ï–í–¨–Æ –†–ê–ë–û–¢–ê–Æ–¢!")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–µ–≤—å—é")