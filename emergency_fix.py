#!/usr/bin/env python3
"""
–≠–ö–°–¢–†–ï–ù–ù–û–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
"""

def emergency_fix_all():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º"""
    
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú")
    print("=" * 50)
    
    with open('app.py', 'r') as f:
        content = f.read()
    
    # 1. –†–ê–î–ò–ö–ê–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ base64 - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—É—é
    old_base64_cleaning = '''            # –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê SVG + BASE64
            print("üßπ –£–õ–¨–¢–ò–ú–ê–¢–ò–í–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ SVG + base64 –¥–∞–Ω–Ω—ã—Ö...")
            cleaned_svg = svg_content
            
            import re
            
            # 1. –£–±–∏—Ä–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            cleaned_svg = re.sub(r'[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]', '', cleaned_svg)
            
            # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–º–ø–µ—Ä—Å–∞–Ω–¥—ã
            cleaned_svg = re.sub(r'&(?!amp;|lt;|gt;|quot;|apos;|#\\d+;|#x[0-9a-fA-F]+;)', '&amp;', cleaned_svg)
            
            # 3. –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ base64 –¥–∞–Ω–Ω—ã—Ö
            def clean_base64_data(match):
                base64_data = match.group(1)
                # –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ base64
                cleaned_base64 = re.sub(r'[^A-Za-z0-9+/=]', '', base64_data)
                # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ = –≤ –∫–æ–Ω—Ü–µ
                cleaned_base64 = re.sub(r'=+$', '', cleaned_base64)
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ = –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è
                remainder = len(cleaned_base64) % 4
                if remainder == 2:
                    cleaned_base64 += '=='
                elif remainder == 3:
                    cleaned_base64 += '='
                return f'data:image/jpeg;base64,{cleaned_base64}'
            
            # –û—á–∏—â–∞–µ–º –≤—Å–µ base64 –¥–∞–Ω–Ω—ã–µ
            pattern = r'data:image/[^;]+;base64,([^"\\'>\\s]+)'
            cleaned_svg = re.sub(pattern, clean_base64_data, cleaned_svg)
            
            # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º image —Ç–µ–≥–∏
            def fix_image_tag(match):
                tag_content = match.group(1)
                if tag_content.endswith('/'):
                    return match.group(0)
                return f'<image{tag_content}/>'
            
            cleaned_svg = re.sub(r'<image([^>]*?)>', fix_image_tag, cleaned_svg)
            
            # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º use —Ç–µ–≥–∏
            def fix_use_tag(match):
                tag_content = match.group(1)
                if tag_content.endswith('/'):
                    return match.group(0)
                return f'<use{tag_content}/>'
            
            cleaned_svg = re.sub(r'<use([^>]*?)>', fix_use_tag, cleaned_svg)
            
            # 6. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            cleaned_svg = re.sub(r'\\s+', ' ', cleaned_svg)
            
            print(f"üßπ –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –¥–ª–∏–Ω–∞: {len(cleaned_svg)} —Å–∏–º–≤–æ–ª–æ–≤")'''
    
    new_base64_cleaning = '''            # –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –û–ß–ò–°–¢–ö–ê SVG - –£–ë–ò–†–ê–ï–ú –í–°–ï BASE64!
            print("üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ SVG - —É–±–∏—Ä–∞—é –≤—Å–µ base64 –¥–∞–Ω–Ω—ã–µ...")
            cleaned_svg = svg_content
            
            import re
            
            # 1. –£–±–∏—Ä–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            cleaned_svg = re.sub(r'[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]', '', cleaned_svg)
            
            # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–º–ø–µ—Ä—Å–∞–Ω–¥—ã
            cleaned_svg = re.sub(r'&(?!amp;|lt;|gt;|quot;|apos;|#\\d+;|#x[0-9a-fA-F]+;)', '&amp;', cleaned_svg)
            
            # 3. –†–ê–î–ò–ö–ê–õ–¨–ù–û –£–ë–ò–†–ê–ï–ú –í–°–ï BASE64 –î–ê–ù–ù–´–ï
            print("üö® –£–±–∏—Ä–∞—é –≤—Å–µ base64 –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é...")
            cleaned_svg = re.sub(r'data:image/[^;]+;base64,[^"\\'>\\s]+', 'https://via.placeholder.com/400x300/cccccc/666666?text=Image', cleaned_svg)
            
            # 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º image —Ç–µ–≥–∏
            def fix_image_tag(match):
                tag_content = match.group(1)
                if tag_content.endswith('/'):
                    return match.group(0)
                return f'<image{tag_content}/>'
            
            cleaned_svg = re.sub(r'<image([^>]*?)>', fix_image_tag, cleaned_svg)
            
            # 5. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º use —Ç–µ–≥–∏
            def fix_use_tag(match):
                tag_content = match.group(1)
                if tag_content.endswith('/'):
                    return match.group(0)
                return f'<use{tag_content}/>'
            
            cleaned_svg = re.sub(r'<use([^>]*?)>', fix_use_tag, cleaned_svg)
            
            # 6. –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            cleaned_svg = re.sub(r'\\s+', ' ', cleaned_svg)
            
            print(f"üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –¥–ª–∏–Ω–∞: {len(cleaned_svg)} —Å–∏–º–≤–æ–ª–æ–≤")'''
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    if old_base64_cleaning in content:
        content = content.replace(old_base64_cleaning, new_base64_cleaning)
        print("‚úÖ Base64 –æ—á–∏—Å—Ç–∫–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—É—é (—É–±–∏—Ä–∞–µ–º –≤—Å–µ base64)")
    else:
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–¥ base64 –æ—á–∏—Å—Ç–∫–∏")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    with open('app.py', 'w') as f:
        f.write(content)
    
    print("üíæ app.py –æ–±–Ω–æ–≤–ª–µ–Ω —Å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏")
    
    # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º preview_system.py - —É–±–∏—Ä–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é preview_system.py...")
    
    with open('preview_system.py', 'r') as f:
        preview_content = f.read()
    
    # –£–±–∏—Ä–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è property –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    old_scaling = '''üîß –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: scale(0.7) –¥–ª—è headshot'''
    
    if old_scaling in preview_content:
        # –ò—â–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–∏–∫—É –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        preview_content = preview_content.replace(
            'print(f"üîß –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: scale(0.7) –¥–ª—è headshot")',
            'print(f"üîß –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ: scale(0.7) –¥–ª—è {image_type}")'
        )
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
        preview_content = preview_content.replace(
            '# –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è headshot (—É–º–µ–Ω—å—à–∞–µ–º –¥–æ 70%)',
            '# –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è headshot (—É–º–µ–Ω—å—à–∞–µ–º –¥–æ 70%)'
        )
        
        with open('preview_system.py', 'w') as f:
            f.write(preview_content)
        
        print("‚úÖ preview_system.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
    return True

if __name__ == "__main__":
    emergency_fix_all()
    
    print("\nüö® –≠–ö–°–¢–†–ï–ù–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´!")
    print("üìã –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:")
    print("  1. ‚ùå –£–±—Ä–∞–Ω—ã –í–°–ï base64 –¥–∞–Ω–Ω—ã–µ (–∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ placeholder)")
    print("  2. üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ preview_system")
    print("  3. üßπ –£—Å–∏–ª–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∞ XML")
    
    print("\n‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï:")
    print("  - PNG –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –ë–ï–ó —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    print("  - –ù–æ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ")
    print("  - –ú–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
    
    print("\nüöÄ –ù—É–∂–µ–Ω redeploy –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è!")