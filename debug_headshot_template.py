#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —Ö–µ–¥—à–æ—Ç–∞ –≤ —à–∞–±–ª–æ–Ω–µ - —á—Ç–æ —Ç–∞–º –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ?
"""

import re

def debug_headshot_in_template():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —à–∞–±–ª–æ–Ω–µ —Å —Ö–µ–¥—à–æ—Ç–æ–º"""
    print("üîç –û–¢–õ–ê–î–ö–ê –•–ï–î–®–û–¢–ê –í –®–ê–ë–õ–û–ù–ï")
    print("=" * 50)
    
    try:
        with open('main.svg', 'r') as f:
            svg_content = f.read()
        
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(svg_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # 1. –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Ö–µ–¥—à–æ—Ç–∞
        headshot_match = re.search(r'<rect[^>]*id="dyno\.agentheadshot"[^>]*>', svg_content)
        if headshot_match:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç —Ö–µ–¥—à–æ—Ç–∞:")
            print(f"   {headshot_match.group(0)}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º pattern ID
            pattern_match = re.search(r'fill="url\(#([^)]+)\)"', headshot_match.group(0))
            if pattern_match:
                pattern_id = pattern_match.group(1)
                print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç pattern: {pattern_id}")
                
                # 2. –ò—â–µ–º pattern
                pattern_pattern = rf'<pattern[^>]*id="{re.escape(pattern_id)}"[^>]*>(.*?)</pattern>'
                pattern_content_match = re.search(pattern_pattern, svg_content, re.DOTALL)
                if pattern_content_match:
                    pattern_content = pattern_content_match.group(1)
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω pattern:")
                    print(f"   {pattern_content[:200]}...")
                    
                    # 3. –ò—â–µ–º use —ç–ª–µ–º–µ–Ω—Ç –≤ pattern
                    use_match = re.search(r'<use[^>]*xlink:href="#([^"]+)"[^>]*/?>', pattern_content)
                    if use_match:
                        image_id = use_match.group(1)
                        print(f"‚úÖ Pattern –∏—Å–ø–æ–ª—å–∑—É–µ—Ç image: {image_id}")
                        
                        # 4. –ò—â–µ–º image —ç–ª–µ–º–µ–Ω—Ç
                        image_pattern = rf'<image[^>]*id="{re.escape(image_id)}"[^>]*>'
                        image_match = re.search(image_pattern, svg_content)
                        if image_match:
                            image_element = image_match.group(0)
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω image —ç–ª–µ–º–µ–Ω—Ç:")
                            print(f"   {image_element[:200]}...")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º href
                            href_match = re.search(r'(?:xlink:href|href)="([^"]*)"', image_element)
                            if href_match:
                                href = href_match.group(1)
                                if href.startswith('data:image'):
                                    print(f"‚úÖ Image —Å–æ–¥–µ—Ä–∂–∏—Ç base64 –¥–∞–Ω–Ω—ã–µ ({len(href)} —Å–∏–º–≤–æ–ª–æ–≤)")
                                    print(f"   –¢–∏–ø: {href[:50]}...")
                                elif href.startswith('http'):
                                    print(f"‚úÖ Image —Å–æ–¥–µ—Ä–∂–∏—Ç URL: {href}")
                                else:
                                    print(f"‚ö†Ô∏è Image —Å–æ–¥–µ—Ä–∂–∏—Ç: {href[:100]}...")
                            else:
                                print(f"‚ùå href –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ image —ç–ª–µ–º–µ–Ω—Ç–µ")
                        else:
                            print(f"‚ùå Image —ç–ª–µ–º–µ–Ω—Ç {image_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    else:
                        print(f"‚ùå use —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ pattern")
                else:
                    print(f"‚ùå Pattern {pattern_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå Pattern ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —ç–ª–µ–º–µ–Ω—Ç–µ —Ö–µ–¥—à–æ—Ç–∞")
        else:
            print(f"‚ùå –≠–ª–µ–º–µ–Ω—Ç dyno.agentheadshot –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª main.svg –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    debug_headshot_in_template()