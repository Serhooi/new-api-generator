#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—å—é –ø–æ URL
"""
import requests

BASE_URL = "https://new-api-generator.onrender.com"

def test_preview_urls():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—å—é –ø–æ URL"""
    
    print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—å—é –ø–æ URL")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω—ã
    try:
        response = requests.get(f"{BASE_URL}/api/templates/all-previews", timeout=30)
        if response.status_code != 200:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω—ã")
            return
            
        data = response.json()
        templates = data.get('templates', [])
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(templates)} —à–∞–±–ª–æ–Ω–æ–≤")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 –ø—Ä–µ–≤—å—é
        for i, template in enumerate(templates[:5]):
            template_id = template.get('id', '–ù–ï–¢ ID')
            preview_url = template.get('preview_url', '')
            
            print(f"\nüìã –®–∞–±–ª–æ–Ω {i+1}: {template_id}")
            print(f"   –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π URL: {preview_url}")
            
            if preview_url:
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π URL
                full_url = f"{BASE_URL}{preview_url}"
                print(f"   –ü–æ–ª–Ω—ã–π URL: {full_url}")
                
                try:
                    preview_response = requests.head(full_url, timeout=10)
                    print(f"   Status: {preview_response.status_code}")
                    
                    if preview_response.status_code == 200:
                        content_type = preview_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')
                        content_length = preview_response.headers.get('content-length', '–ù–ï –£–ö–ê–ó–ê–ù')
                        print(f"   ‚úÖ –ü—Ä–µ–≤—å—é –¥–æ—Å—Ç—É–ø–Ω–æ!")
                        print(f"   üìÑ Content-Type: {content_type}")
                        print(f"   üìè –†–∞–∑–º–µ—Ä: {content_length} –±–∞–π—Ç")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        if 'image' in content_type:
                            print(f"   üñºÔ∏è –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")
                        else:
                            print(f"   ‚ö†Ô∏è –ù–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {content_type}")
                            
                    elif preview_response.status_code == 404:
                        print(f"   ‚ùå –ü—Ä–µ–≤—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (404)")
                    else:
                        print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {preview_response.status_code}")
                        
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            else:
                print(f"   ‚ùå Preview URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_direct_preview_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–≤—å—é"""
    
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–≤—å—é")
    
    # –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–µ–≤—å—é URL
    preview_urls = [
        "/output/previews/propertyimage2_preview.png",
        "/api/templates/propertyimage2/preview"
    ]
    
    for preview_url in preview_urls:
        print(f"\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º: {preview_url}")
        full_url = f"{BASE_URL}{preview_url}"
        
        try:
            response = requests.head(full_url, timeout=10)
            print(f"   Status: {response.status_code}")
            
            if response.status_code == 200:
                content_type = response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')
                print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ!")
                print(f"   üìÑ Content-Type: {content_type}")
            else:
                print(f"   ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_preview_urls()
    test_direct_preview_access()
    
    print(f"\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–µ–≤—å—é URL –∑–∞–≤–µ—Ä—à–µ–Ω!")