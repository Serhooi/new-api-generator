#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
"""
import requests
import time

BASE_URL = "https://new-api-generator-1.onrender.com"

def check_deployment_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è...")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π endpoint
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π endpoint")
    try:
        response = requests.get(f"{BASE_URL}/", timeout=10)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!")
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
    print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints")
    
    # –°–ø–∏—Å–æ–∫ endpoints –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    endpoints = [
        "/api/templates",
        "/api/generate/carousel",
        "/api/generate/carousel-png",
        "/api/generate/carousel-png-simple"
    ]
    
    for endpoint in endpoints:
        try:
            if endpoint == "/api/templates":
                response = requests.get(f"{BASE_URL}{endpoint}", timeout=10)
            else:
                # –î–ª—è POST endpoints –¥–µ–ª–∞–µ–º HEAD –∑–∞–ø—Ä–æ—Å
                response = requests.head(f"{BASE_URL}{endpoint}", timeout=10)
            
            print(f"   {endpoint}: {response.status_code}")
            
            if response.status_code == 404:
                print(f"   ‚ùå Endpoint {endpoint} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            elif response.status_code in [200, 405]:  # 405 = Method Not Allowed (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è HEAD –Ω–∞ POST)
                print(f"   ‚úÖ Endpoint {endpoint} –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print(f"   ‚ö†Ô∏è Endpoint {endpoint}: —Å—Ç–∞—Ç—É—Å {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ {endpoint}: {e}")
    
    return True

def test_simple_png_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é"""
    
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é")
    
    test_data = {
        "main_template_id": "propertyimage2",
        "data": {
            "address": "123 Test Street",
            "price": "$500,000"
        }
    }
    
    try:
        print("   üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel-png-simple",
            json=test_data,
            timeout=30
        )
        
        print(f"   üì• –û—Ç–≤–µ—Ç: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"   ‚úÖ PNG —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
            print(f"   üîó URL: {result.get('url', '–ù–ï–¢ URL')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type
            if 'url' in result:
                file_response = requests.head(result['url'])
                content_type = file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')
                print(f"   üìÑ Content-Type: {content_type}")
                
                if '.png' in result['url']:
                    print(f"   ‚úÖ –§–∞–π–ª –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .png")
                else:
                    print(f"   ‚ùå –§–∞–π–ª –ù–ï –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .png")
                    
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è API")
    print(f"üåê URL: {BASE_URL}")
    print(f"‚è∞ –í—Ä–µ–º—è: {time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    if check_deployment_status():
        test_simple_png_generation()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")