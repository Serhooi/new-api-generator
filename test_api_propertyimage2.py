#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –¥–ª—è dyno.propertyimage2
"""

import requests
import json
import time

API_URL = "http://localhost:5000"

def test_carousel_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—É—Å–µ–ª–∏ —Å dyno.propertyimage2"""
    
    print("üß™ –¢–ï–°–¢ API –î–õ–Ø DYNO.PROPERTYIMAGE2")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º ID —à–∞–±–ª–æ–Ω–æ–≤
    main_template_id = "0f30799d-37bb-487f-853a-6bc70bdd577c"  # –∏–∑ –≤—ã–≤–æ–¥–∞ create_test_templates.py
    photo_template_id = "dcdad5a5-9c18-45f6-ab87-e6b14d5b5c59"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "main_template_id": main_template_id,
        "photo_template_id": photo_template_id,
        "data": {
            # –î–ª—è main —Å–ª–∞–π–¥–∞
            "dyno.propertyimage": "https://images.unsplash.com/photo-1560518883-ce09059eeffa?w=1080&h=600&fit=crop",
            "dyno.agentheadshot": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face",
            
            # –î–ª—è photo —Å–ª–∞–π–¥–∞
            "dyno.propertyimage2": "https://images.unsplash.com/photo-1570129477492-45c003edd2be?w=1080&h=800&fit=crop",
            
            # –û–±—â–∏–µ –ø–æ–ª—è
            "dyno.propertyaddress": "123 Main Street, Beverly Hills, CA 90210",
            "dyno.price": "$450,000",
            "dyno.name": "John Smith",
            "dyno.phone": "(555) 123-4567"
        }
    }
    
    print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   Main template: {main_template_id}")
    print(f"   Photo template: {photo_template_id}")
    print(f"   dyno.propertyimage2: {test_data['data']['dyno.propertyimage2'][:50]}...")
    
    print(f"\nüîÑ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—É—Å–µ–ª–∏...")
    
    try:
        response = requests.post(
            f"{API_URL}/api/generate/carousel",
            headers={"Content-Type": "application/json"},
            json=test_data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   Carousel ID: {result.get('carousel_id', 'N/A')}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤: {len(result.get('slides', []))}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–∞–π–¥—ã
            for i, slide in enumerate(result.get('slides', [])):
                print(f"   –°–ª–∞–π–¥ {i+1}: {slide.get('filename', 'N/A')}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –Ω–∞ {API_URL}")
        print(f"   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python3 app.py")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_carousel_generation()