#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤
"""

import sqlite3
import requests
import json

def check_templates_in_db():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ —à–∞–±–ª–æ–Ω—ã –µ—Å—Ç—å –≤ –±–∞–∑–µ"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –®–ê–ë–õ–û–ù–û–í –í –ë–ê–ó–ï")
    print("=" * 50)
    
    try:
        conn = sqlite3.connect('templates.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
        cursor.execute('SELECT id, name, category, template_role FROM templates')
        templates = cursor.fetchall()
        
        print(f"üìä –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤ –≤ –±–∞–∑–µ: {len(templates)}")
        
        if templates:
            print("\nüìã –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤:")
            for template in templates:
                template_id, name, category, role = template
                print(f"  üéØ {name}")
                print(f"     ID: {template_id}")
                print(f"     Category: {category}")
                print(f"     Role: {role}")
                print()
        
        conn.close()
        return templates
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –±–∞–∑—ã: {e}")
        return []

def test_template_deletion_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤"""
    
    print("üß™ –¢–ï–°–¢ API –£–î–ê–õ–ï–ù–ò–Ø –®–ê–ë–õ–û–ù–û–í")
    print("=" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤ —á–µ—Ä–µ–∑ API
    try:
        response = requests.get("http://localhost:5000/api/templates/all-previews", timeout=10)
        print(f"üìä API —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            templates = data.get('templates', [])
            print(f"üìã –®–∞–±–ª–æ–Ω–æ–≤ —á–µ—Ä–µ–∑ API: {len(templates)}")
            
            # –ò—â–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
            test_templates = [t for t in templates if 'test' in t.get('name', '').lower()]
            print(f"üß™ –¢–µ—Å—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: {len(test_templates)}")
            
            if test_templates:
                print("\nüéØ –¢–µ—Å—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã:")
                for template in test_templates:
                    print(f"  - {template.get('name')} (ID: {template.get('id')})")
                
                # –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
                test_template = test_templates[0]
                template_id = test_template.get('id')
                template_name = test_template.get('name')
                
                print(f"\nüóëÔ∏è –ü—Ä–æ–±—É—é —É–¥–∞–ª–∏—Ç—å: {template_name} (ID: {template_id})")
                
                delete_response = requests.delete(
                    f"http://localhost:5000/api/templates/{template_id}/delete",
                    timeout=10
                )
                
                print(f"üìä –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å: {delete_response.status_code}")
                print(f"üìã –û—Ç–≤–µ—Ç: {delete_response.text}")
                
                if delete_response.status_code == 200:
                    print("‚úÖ –®–∞–±–ª–æ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ API")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —à–∞–±–ª–æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
                    check_response = requests.get("http://localhost:5000/api/templates/all-previews", timeout=10)
                    if check_response.status_code == 200:
                        new_data = check_response.json()
                        new_templates = new_data.get('templates', [])
                        new_count = len([t for t in new_templates if t.get('id') == template_id])
                        
                        if new_count == 0:
                            print("‚úÖ –®–∞–±–ª–æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞")
                        else:
                            print("‚ùå –®–∞–±–ª–æ–Ω –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ!")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.text}")
            else:
                print("‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def check_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"""
    
    print("üè• –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ï–†–ê")
    print("=" * 30)
    
    try:
        response = requests.get("http://localhost:5000/api/health", timeout=5)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    
    print("üîß –û–¢–õ–ê–î–ö–ê –£–î–ê–õ–ï–ù–ò–Ø –®–ê–ë–õ–û–ù–û–í")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_templates = check_templates_in_db()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    server_ok = check_server_status()
    
    if server_ok:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
        test_template_deletion_api()
    else:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, API —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã")
    
    print("\nüìä –ò–¢–û–ì–ò:")
    print(f"üìã –®–∞–±–ª–æ–Ω–æ–≤ –≤ –±–∞–∑–µ: {len(db_templates)}")
    print(f"üè• –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: {'‚úÖ' if server_ok else '‚ùå'}")

if __name__ == "__main__":
    main()