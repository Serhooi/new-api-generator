#!/usr/bin/env python3
"""
–ñ–¥–µ–º –¥–µ–ø–ª–æ–π –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
"""

import requests
import time

def wait_for_deploy_and_test():
    """–ñ–¥–µ–º –¥–µ–ø–ª–æ–π –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º"""
    
    print("‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è –Ω–∞ Render...")
    print("üïê –ü–æ–¥–æ–∂–¥–µ–º 2 –º–∏–Ω—É—Ç—ã –¥–ª—è –¥–µ–ø–ª–æ—è...")
    
    # –ñ–¥–µ–º 2 –º–∏–Ω—É—Ç—ã
    for i in range(120, 0, -10):
        print(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å {i} —Å–µ–∫—É–Ω–¥...")
        time.sleep(10)
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è...")
    
    api_url = "https://new-api-generator.onrender.com/api/generate/carousel"
    
    test_data = {
        "main_template_id": "9cb08943-8d1e-440c-a712-92111ec23048",
        "photo_template_id": "f6ed8d52-3bbf-495e-8b67-61dc7d4ff47d", 
        "data": {
            "propertyaddress": "Test After Deploy",
            "price": "$999,999",
            "beds": "3",
            "baths": "2",
            "propertyimage2": "https://images.unsplash.com/photo-1560518883-ce09059eeffa?w=800"
        }
    }
    
    try:
        print("üì° –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
        response = requests.post(api_url, json=test_data, timeout=60)
        
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('success'):
                print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç")
                
                # –ò—â–µ–º PNG URLs
                png_found = False
                for key, value in result.items():
                    if 'png' in key.lower():
                        print(f"üñºÔ∏è –ù–∞–π–¥–µ–Ω PNG: {key} = {value}")
                        png_found = True
                
                if 'images_detailed' in result:
                    for img in result['images_detailed']:
                        if isinstance(img, dict):
                            for k, v in img.items():
                                if 'png' in k.lower():
                                    print(f"üñºÔ∏è –ù–∞–π–¥–µ–Ω PNG –≤ images_detailed: {k} = {v}")
                                    png_found = True
                
                if png_found:
                    print("üéâ PNG —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è!")
                else:
                    print("‚ö†Ô∏è PNG URLs –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    print("üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö")
            else:
                print("‚ùå API –≤–µ—Ä–Ω—É–ª success: false")
        else:
            print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.status_code}")
            print(response.text[:500])
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")

if __name__ == "__main__":
    wait_for_deploy_and_test()