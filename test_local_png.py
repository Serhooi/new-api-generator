#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_local_png_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ª–æ–∫–∞–ª—å–Ω–æ")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ app.py
        from app import process_svg_font_perfect, save_file_locally_or_supabase
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π —É—Å–ø–µ—à–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π SVG –¥–ª—è —Ç–µ—Å—Ç–∞
        test_svg = '''<svg width="1080" height="1350" xmlns="http://www.w3.org/2000/svg">
            <rect width="100%" height="100%" fill="white"/>
            <text id="dyno.address" x="540" y="200" text-anchor="middle" font-size="24" fill="black">
                <tspan x="540" y="200">{{dyno.address}}</tspan>
            </text>
            <text id="dyno.price" x="540" y="300" text-anchor="middle" font-size="32" fill="blue">
                <tspan x="540" y="300">{{dyno.price}}</tspan>
            </text>
        </svg>'''
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            "dyno.address": "123 Test Street, Beverly Hills, CA 90210",
            "dyno.price": "$500,000"
        }
        
        print("üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º SVG...")
        processed_svg = process_svg_font_perfect(test_svg, test_data)
        
        print("‚úÖ SVG –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"üìè –†–∞–∑–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ SVG: {len(processed_svg)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–º–µ–Ω—ã –ø—Ä–æ–∏–∑–æ—à–ª–∏
        if "123 Test Street" in processed_svg:
            print("‚úÖ –ê–¥—Ä–µ—Å –∑–∞–º–µ–Ω–µ–Ω –≤ SVG")
        else:
            print("‚ùå –ê–¥—Ä–µ—Å –ù–ï –∑–∞–º–µ–Ω–µ–Ω –≤ SVG")
            
        if "$500,000" in processed_svg:
            print("‚úÖ –¶–µ–Ω–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –≤ SVG")
        else:
            print("‚ùå –¶–µ–Ω–∞ –ù–ï –∑–∞–º–µ–Ω–µ–Ω–∞ –≤ SVG")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º PIL fallback –¥–ª—è PNG
        print("\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º PIL PNG –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")
        
        try:
            from PIL import Image, ImageDraw
            
            # –°–æ–∑–¥–∞–µ–º PNG —á–µ—Ä–µ–∑ PIL
            img = Image.new('RGB', (1080, 1350), color='white')
            draw = ImageDraw.Draw(img)
            
            # –†–∏—Å—É–µ–º –∑–∞–≥–ª—É—à–∫—É
            draw.rectangle([50, 50, 1030, 1300], outline='gray', width=5)
            draw.text((540, 675), 'PNG Generated via PIL', fill='black', anchor='mm')
            draw.text((540, 725), 'Test Successful', fill='green', anchor='mm')
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            test_png_path = 'test_output.png'
            img.save(test_png_path)
            
            print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω: {test_png_path}")
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(test_png_path)} –±–∞–π—Ç")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            os.remove(test_png_path)
            print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ PIL: {e}")
        
        print("\n‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_local_png_generation()