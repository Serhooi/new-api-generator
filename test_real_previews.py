#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–µ–≤—å—é - –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
"""

import sys
sys.path.append('.')

from app import generate_svg_preview, create_preview_svg, convert_svg_to_png_improved
import os

def test_preview_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ–≤—å—é –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ SVG"""
    
    print("üß™ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–´–• –ü–†–ï–í–¨–Æ")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π SVG —à–∞–±–ª–æ–Ω (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)
    test_svg = '''<svg width="1080" height="1350" xmlns="http://www.w3.org/2000/svg">
        <rect width="1080" height="1350" fill="#ffffff"/>
        
        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
        <rect x="40" y="40" width="1000" height="200" fill="#1976d2"/>
        <text x="540" y="140" text-anchor="middle" font-size="48" fill="white" font-weight="bold">{{dyno.agentName}}</text>
        
        <!-- –ê–¥—Ä–µ—Å -->
        <text x="540" y="300" text-anchor="middle" font-size="32" fill="#333">{{dyno.propertyAddress}}</text>
        
        <!-- –¶–µ–Ω–∞ -->
        <rect x="200" y="350" width="680" height="100" fill="#4caf50"/>
        <text x="540" y="410" text-anchor="middle" font-size="42" fill="white" font-weight="bold">{{dyno.price}}</text>
        
        <!-- –î–µ—Ç–∞–ª–∏ -->
        <text x="270" y="500" text-anchor="middle" font-size="24" fill="#666">{{dyno.bedrooms}} bed</text>
        <text x="540" y="500" text-anchor="middle" font-size="24" fill="#666">{{dyno.bathrooms}} bath</text>
        <text x="810" y="500" text-anchor="middle" font-size="24" fill="#666">{{dyno.sqft}} sq ft</text>
        
        <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ -->
        <rect x="100" y="600" width="880" height="500" fill="#e0e0e0" stroke="#999" stroke-width="2"/>
        <text x="540" y="860" text-anchor="middle" font-size="20" fill="#666">Property Image</text>
        
        <!-- –ö–æ–Ω—Ç–∞–∫—Ç—ã -->
        <text x="540" y="1200" text-anchor="middle" font-size="20" fill="#333">{{dyno.agentPhone}}</text>
        <text x="540" y="1250" text-anchor="middle" font-size="18" fill="#666">{{dyno.agentEmail}}</text>
    </svg>'''
    
    print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é create_preview_svg...")
    preview_svg = create_preview_svg(test_svg)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ dyno –ø–æ–ª—è –∑–∞–º–µ–Ω–∏–ª–∏—Å—å
    if '{{dyno.' in preview_svg:
        print("‚ùå Dyno –ø–æ–ª—è –Ω–µ –∑–∞–º–µ–Ω–∏–ª–∏—Å—å")
        return False
    else:
        print("‚úÖ Dyno –ø–æ–ª—è –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã")
    
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é generate_svg_preview...")
    result = generate_svg_preview(test_svg, "test_template", 400, 600)
    
    if result['success']:
        print("‚úÖ generate_svg_preview —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª
        preview_file = f"output/previews/test_template_preview.png"
        if os.path.exists(preview_file):
            size = os.path.getsize(preview_file)
            print(f"üìä –†–∞–∑–º–µ—Ä –ø—Ä–µ–≤—å—é: {size} bytes")
            
            if size > 5000:  # –ë–æ–ª—å—à–µ 5KB
                print("‚úÖ –ü—Ä–µ–≤—å—é —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")
                
                # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
                try:
                    os.remove(preview_file)
                    print("üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
                except:
                    pass
                
                return True
            else:
                print("‚ùå –ü—Ä–µ–≤—å—é —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ")
        else:
            print("‚ùå –§–∞–π–ª –ø—Ä–µ–≤—å—é –Ω–µ —Å–æ–∑–¥–∞–Ω")
    else:
        print("‚ùå generate_svg_preview –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    return False

def test_direct_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—É—é –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —Å dyno –ø–æ–ª—è–º–∏"""
    
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –ü–†–Ø–ú–û–ô –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò")
    print("=" * 30)
    
    # SVG —Å dyno –ø–æ–ª—è–º–∏
    svg_with_dyno = '''<svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
        <rect width="400" height="300" fill="#f0f8ff"/>
        <rect x="20" y="20" width="360" height="260" fill="white" stroke="#1976d2" stroke-width="2"/>
        <text x="200" y="80" text-anchor="middle" font-size="24" fill="#1976d2">{{dyno.agentName}}</text>
        <text x="200" y="120" text-anchor="middle" font-size="16" fill="#666">{{dyno.propertyAddress}}</text>
        <text x="200" y="180" text-anchor="middle" font-size="32" fill="#4caf50">{{dyno.price}}</text>
        <text x="200" y="220" text-anchor="middle" font-size="14" fill="#999">{{dyno.bedrooms}} bed ‚Ä¢ {{dyno.bathrooms}} bath</text>
    </svg>'''
    
    # –ó–∞–º–µ–Ω—è–µ–º dyno –ø–æ–ª—è
    preview_svg = create_preview_svg(svg_with_dyno)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PNG
    success = convert_svg_to_png_improved(preview_svg, 'test_direct_preview.png', 400, 300)
    
    if success:
        if os.path.exists('test_direct_preview.png'):
            size = os.path.getsize('test_direct_preview.png')
            print(f"‚úÖ –ü—Ä—è–º–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: {size} bytes")
            os.remove('test_direct_preview.png')
            return True
    
    print("‚ùå –ü—Ä—è–º–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    return False

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–õ–¨–ù–´–• –ü–†–ï–í–¨–Æ")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs('output/previews', exist_ok=True)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    preview_ok = test_preview_generation()
    direct_ok = test_direct_conversion()
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"üñºÔ∏è –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–≤—å—é: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if preview_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    print(f"üîÑ –ü—Ä—è–º–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if direct_ok else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
    
    if preview_ok and direct_ok:
        print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–û!")
        print("‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–µ–≤—å—é –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã")
        print("‚úÖ Dyno –ø–æ–ª—è –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö")
        print("‚úÖ PNG —Å–æ–∑–¥–∞—é—Ç—Å—è —Å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º")
        print("\nüìã –ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:")
        print("‚Ä¢ generate_svg_preview –∏—Å–ø–æ–ª—å–∑—É–µ—Ç convert_svg_to_png_improved")
        print("‚Ä¢ –£–±—Ä–∞–Ω—ã –∑–∞–≥–ª—É—à–∫–∏ 'Template Preview'")
        print("‚Ä¢ –ü—Ä–µ–≤—å—é —Å–æ–∑–¥–∞—é—Ç—Å—è –∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ SVG –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π –ø—Ä–µ–≤—å—é")