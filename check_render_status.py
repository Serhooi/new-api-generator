#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã URL –∏ —Å—Ç–∞—Ç—É—Å Render
"""
import requests
import time

# –í–æ–∑–º–æ–∂–Ω—ã–µ URL
urls_to_try = [
    "https://new-api-generator-1.onrender.com",
    "https://new-api-generator.onrender.com", 
    "http://new-api-generator-1.onrender.com",
]

def check_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π URL"""
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è—é: {url}")
    
    try:
        # –ü—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π endpoint
        response = requests.get(url, timeout=10)
        print(f"   Status: {response.status_code}")
        
        if response.status_code == 200:
            print(f"   ‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!")
            return True
        elif response.status_code == 404:
            print(f"   ‚ùå 404 - –°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
    except requests.exceptions.ConnectTimeout:
        print(f"   ‚ùå Timeout - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except requests.exceptions.ConnectionError:
        print(f"   ‚ùå Connection Error - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def check_render_deployment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ Render"""
    
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Render —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è")
    print("=" * 50)
    print(f"‚è∞ –í—Ä–µ–º—è: {time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    working_url = None
    
    for url in urls_to_try:
        if check_url(url):
            working_url = url
            break
    
    if working_url:
        print(f"\n‚úÖ –†–∞–±–æ—á–∏–π URL –Ω–∞–π–¥–µ–Ω: {working_url}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
        print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints –Ω–∞ {working_url}")
        
        endpoints = [
            "/api/templates",
            "/api/generate/carousel", 
            "/api/generate/carousel-png",
            "/api/generate/carousel-png-simple"
        ]
        
        for endpoint in endpoints:
            try:
                if endpoint == "/api/templates":
                    response = requests.get(f"{working_url}{endpoint}", timeout=10)
                else:
                    response = requests.options(f"{working_url}{endpoint}", timeout=10)
                
                print(f"   {endpoint}: {response.status_code}")
                
            except Exception as e:
                print(f"   {endpoint}: ‚ùå {e}")
        
        return working_url
    else:
        print(f"\n‚ùå –ù–∏ –æ–¥–∏–Ω URL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print(f"   1. –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å")
        print(f"   2. –û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        print(f"   3. –ü—Ä–æ–±–ª–µ–º—ã —Å Render —Å–µ—Ä–≤–∏—Å–æ–º")
        print(f"   4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL")
        
        return None

if __name__ == "__main__":
    working_url = check_render_deployment()
    
    if not working_url:
        print(f"\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print(f"   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Render Dashboard")
        print(f"   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ requirements.txt —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print(f"   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print(f"   4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ")