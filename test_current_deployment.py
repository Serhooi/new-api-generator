#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ PNG endpoints
"""
import requests
import json

# URL –≤–∞—à–µ–≥–æ API
BASE_URL = "https://new-api-generator.onrender.com"

def test_png_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ PNG endpoints"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "main_template_id": "propertyimage2",
        "photo_template_id": "propertyimage2",
        "data": {
            "address": "123 Test Street",
            "price": "$500,000",
            "beds": "3",
            "baths": "2",
            "sqft": "1,500",
            "agent_name": "Test Agent",
            "agent_phone": "(555) 123-4567",
            "agent_email": "test@example.com"
        }
    }
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º PNG endpoints...")
    print("=" * 50)
    
    # 1. –û—Å–Ω–æ–≤–Ω–æ–π endpoint —Å format: png
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel —Å format: 'png'")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel",
            json={**test_data, "format": "png"},
            timeout=30
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"Format –≤ –æ—Ç–≤–µ—Ç–µ: {result.get('format', '–ù–ï –£–ö–ê–ó–ê–ù')}")
            print(f"URL: {result.get('url', '–ù–ï–¢ URL')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type —Ñ–∞–π–ª–∞
            if 'url' in result:
                file_response = requests.head(result['url'])
                print(f"Content-Type —Ñ–∞–π–ª–∞: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                print(f"–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ URL: {'.png' if '.png' in result['url'] else '.svg' if '.svg' in result['url'] else '–ù–ï–ò–ó–í–ï–°–¢–ù–û'}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 2. PNG endpoint
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel-png")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel-png",
            json=test_data,
            timeout=30
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"URL: {result.get('url', '–ù–ï–¢ URL')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type —Ñ–∞–π–ª–∞
            if 'url' in result:
                file_response = requests.head(result['url'])
                print(f"Content-Type —Ñ–∞–π–ª–∞: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                print(f"–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ URL: {'.png' if '.png' in result['url'] else '.svg' if '.svg' in result['url'] else '–ù–ï–ò–ó–í–ï–°–¢–ù–û'}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 3. –ü—Ä–æ—Å—Ç–æ–π PNG endpoint
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel-png-simple")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel-png-simple",
            json=test_data,
            timeout=30
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"URL: {result.get('url', '–ù–ï–¢ URL')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type —Ñ–∞–π–ª–∞
            if 'url' in result:
                file_response = requests.head(result['url'])
                print(f"Content-Type —Ñ–∞–π–ª–∞: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                print(f"–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ URL: {'.png' if '.png' in result['url'] else '.svg' if '.svg' in result['url'] else '–ù–ï–ò–ó–í–ï–°–¢–ù–û'}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–π SVG –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç: /api/generate/carousel (–æ–±—ã—á–Ω—ã–π SVG)")
    try:
        response = requests.post(
            f"{BASE_URL}/api/generate/carousel",
            json=test_data,
            timeout=30
        )
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            print(f"Format –≤ –æ—Ç–≤–µ—Ç–µ: {result.get('format', '–ù–ï –£–ö–ê–ó–ê–ù')}")
            print(f"URL: {result.get('url', '–ù–ï–¢ URL')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Content-Type —Ñ–∞–π–ª–∞
            if 'url' in result:
                file_response = requests.head(result['url'])
                print(f"Content-Type —Ñ–∞–π–ª–∞: {file_response.headers.get('content-type', '–ù–ï –£–ö–ê–ó–ê–ù')}")
                print(f"–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤ URL: {'.png' if '.png' in result['url'] else '.svg' if '.svg' in result['url'] else '–ù–ï–ò–ó–í–ï–°–¢–ù–û'}")
        else:
            print(f"–û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    test_png_endpoints()