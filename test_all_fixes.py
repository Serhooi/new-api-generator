#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: photo —Å–ª–∞–π–¥, –ø—Ä–µ–≤—å—é, PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
"""

import requests
import json
import time

def test_server_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    try:
        response = requests.get("http://localhost:5000/api/health", timeout=5)
        return response.status_code == 200
    except:
        return False

def test_template_previews():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤"""
    print("üñºÔ∏è –¢–ï–°–¢ –ü–†–ï–í–¨–Æ –®–ê–ë–õ–û–ù–û–í")
    print("=" * 40)
    
    try:
        response = requests.get("http://localhost:5000/api/templates/all-previews", timeout=15)
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            templates = data.get('templates', [])
            print(f"üìã –®–∞–±–ª–æ–Ω–æ–≤: {len(templates)}")
            
            if templates:
                template = templates[0]
                preview_url = template.get('preview_url')
                print(f"üéØ –¢–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω: {template.get('name')}")
                print(f"üîó Preview URL: {preview_url}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–µ–≤—å—é
                if preview_url:
                    preview_response = requests.get(f"http://localhost:5000{preview_url}", timeout=10)
                    print(f"üìä Preview —Å—Ç–∞—Ç—É—Å: {preview_response.status_code}")
                    
                    if preview_response.status_code == 200:
                        print("‚úÖ –ü—Ä–µ–≤—å—é –¥–æ—Å—Ç—É–ø–Ω–æ")
                        return True
                    else:
                        print("‚ùå –ü—Ä–µ–≤—å—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
                        return False
            else:
                print("‚ÑπÔ∏è –®–∞–±–ª–æ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def test_carousel_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–∞—Ä—É—Å–µ–ª–∏ —Å –æ—Ç–ª–∞–¥–∫–æ–π photo —Å–ª–∞–π–¥–∞"""
    print("\nüé† –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–ê–†–£–°–ï–õ–ò")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω—ã
    try:
        templates_response = requests.get("http://localhost:5000/api/templates/all-previews", timeout=10)
        if templates_response.status_code != 200:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω—ã")
            return False, None
        
        templates = templates_response.json().get('templates', [])
        main_template = None
        photo_template = None
        
        for template in templates:
            if template.get('template_role') == 'main':
                main_template = template
            elif template.get('template_role') == 'photo':
                photo_template = template
        
        if not main_template or not photo_template:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã main –∏–ª–∏ photo —à–∞–±–ª–æ–Ω—ã")
            return False, None
        
        print(f"‚úÖ Main: {main_template['name']}")
        print(f"‚úÖ Photo: {photo_template['name']}")
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_data = {
            "main_template_id": main_template['id'],
            "photo_template_id": photo_template['id'],
            "data": {
                "dyno.propertyaddress": "123 Test Street",
                "dyno.price": "$500,000",
                "dyno.propertyimage": "https://images.unsplash.com/photo-1570129477492-45c003edd2be?w=400&h=300",
                "dyno.propertyimage2": "https://images.unsplash.com/photo-1560448204-e02f11c3d0e2?w=400&h=300",
                "dyno.name": "John Smith",
                "dyno.phone": "(555) 123-4567"
            }
        }
        
        print("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–∞—Ä—É—Å–µ–ª—å...")
        response = requests.post(
            "http://localhost:5000/api/generate/carousel",
            json=test_data,
            timeout=60
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            
            images = result.get('images', [])
            print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(images)}")
            
            if len(images) >= 2:
                main_url = images[0]
                photo_url = images[1]
                
                print(f"üéØ Main URL: {main_url}")
                print(f"üì∏ Photo URL: {photo_url}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
                main_check = requests.head(main_url, timeout=10)
                photo_check = requests.head(photo_url, timeout=10)
                
                print(f"üìä Main –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {main_check.status_code}")
                print(f"üìä Photo –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {photo_check.status_code}")
                
                if main_check.status_code == 200 and photo_check.status_code == 200:
                    print("‚úÖ –û–±–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã")
                    return True, images[0]  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π URL –¥–ª—è PNG —Ç–µ—Å—Ç–∞
                else:
                    print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
                    return False, None
            else:
                print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                return False, None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {response.text}")
            return False, None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False, None

def test_png_conversion(svg_url):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é SVG –≤ PNG"""
    print("\nüñºÔ∏è –¢–ï–°–¢ PNG –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò")
    print("=" * 40)
    
    if not svg_url:
        print("‚ùå –ù–µ—Ç SVG URL –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
        return False
    
    try:
        conversion_data = {"svg_url": svg_url}
        
        print(f"üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é: {svg_url}")
        response = requests.post(
            "http://localhost:5000/api/convert-to-png",
            json=conversion_data,
            timeout=60
        )
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            if result.get('success'):
                png_url = result.get('png_url')
                filename = result.get('filename')
                
                print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω: {filename}")
                print(f"üîó PNG URL: {png_url}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å PNG
                png_check = requests.head(png_url, timeout=10)
                print(f"üìä PNG –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: {png_check.status_code}")
                
                if png_check.status_code == 200:
                    print("‚úÖ PNG –¥–æ—Å—Ç—É–ø–µ–Ω")
                    return True
                else:
                    print("‚ùå PNG –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                    return False
            else:
                print("‚ùå –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    if not test_server_health():
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return
    
    print("‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤
    previews_ok = test_template_previews()
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏ (–≤–∫–ª—é—á–∞—è photo —Å–ª–∞–π–¥)
    carousel_ok, svg_url = test_carousel_generation()
    
    # –¢–µ—Å—Ç 3: PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
    png_ok = test_png_conversion(svg_url) if svg_url else False
    
    # –ò—Ç–æ–≥–∏
    print("\nüìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 30)
    print(f"üñºÔ∏è –ü—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤: {'‚úÖ' if previews_ok else '‚ùå'}")
    print(f"üé† –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—É—Å–µ–ª–∏: {'‚úÖ' if carousel_ok else '‚ùå'}")
    print(f"üñºÔ∏è PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: {'‚úÖ' if png_ok else '‚ùå'}")
    
    if previews_ok and carousel_ok and png_ok:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –ü—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("‚úÖ Photo —Å–ª–∞–π–¥ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è")
        print("‚úÖ PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚ö†Ô∏è –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´:")
        if not previews_ok:
            print("‚ùå –ü—Ä–µ–≤—å—é —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        if not carousel_ok:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–∞—Ä—É—Å–µ–ª–∏")
        if not png_ok:
            print("‚ùå PNG –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main()