#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import os

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    env_vars = [
        'RENDER',
        'SUPABASE_URL', 
        'SUPABASE_ANON_KEY',
        'PORT',
        'PYTHON_VERSION'
    ]
    
    for var in env_vars:
        value = os.environ.get(var)
        if value:
            # –°–∫—Ä—ã–≤–∞–µ–º –∫–ª—é—á–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if 'KEY' in var and len(value) > 10:
                display_value = value[:10] + "..." + value[-5:]
            else:
                display_value = value
            print(f"‚úÖ {var}: {display_value}")
        else:
            print(f"‚ùå {var}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É is_render
    print("\\nüîç –õ–û–ì–ò–ö–ê IS_RENDER:")
    render_var = os.environ.get('RENDER', False)
    supabase_url = os.environ.get('SUPABASE_URL')
    
    print(f"üìã RENDER: {render_var}")
    print(f"üìã SUPABASE_URL: {supabase_url}")
    
    if supabase_url:
        url_condition = supabase_url != 'https://vahgmyuowsilbxqdjjii.supabase.co'
        print(f"üìã URL != vahgmyuowsilbxqdjjii: {url_condition}")
    
    is_render = render_var or bool(supabase_url)
    print(f"üéØ is_render —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {is_render}")
    
    if is_render:
        print("‚úÖ –§–∞–π–ª—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ Supabase")
    else:
        print("üìÅ –§–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –ª–æ–∫–∞–ª—å–Ω–æ")

def test_supabase_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    
    print("\\nüîó –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö SUPABASE")
    print("=" * 40)
    
    try:
        from supabase import create_client, Client
        
        supabase_url = os.environ.get('SUPABASE_URL')
        supabase_key = os.environ.get('SUPABASE_ANON_KEY')
        
        if not supabase_url or not supabase_key:
            print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        supabase: Client = create_client(supabase_url, supabase_key)
        print("‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ storage
        try:
            buckets = supabase.storage.list_buckets()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ buckets: {len(buckets)}")
            
            for bucket in buckets:
                print(f"  ü™£ {bucket.name} (public: {bucket.public})")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ storage: {e}")
            
    except ImportError:
        print("‚ùå –ú–æ–¥—É–ª—å supabase –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")

if __name__ == "__main__":
    check_environment()
    test_supabase_connection()