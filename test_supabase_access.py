#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Supabase URL
"""

import requests

def test_supabase_urls():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å URL –∏–∑ Supabase"""
    
    print("üîç –¢–ï–°–¢ –î–û–°–¢–£–ü–ù–û–°–¢–ò SUPABASE URL")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL –∏–∑ –æ—à–∏–±–∫–∏
    test_urls = [
        "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public/carousel-templates/carousel/carousel_test_main.svg",
        "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public/images/carousel/carousel_test_main.svg",
        "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public/carousel-templates/carousel_test_main.svg"
    ]
    
    for i, url in enumerate(test_urls, 1):
        print(f"\\nüåê –¢–µ—Å—Ç {i}: {url}")
        
        try:
            # –î–µ–ª–∞–µ–º HEAD –∑–∞–ø—Ä–æ—Å
            response = requests.head(url, timeout=10)
            print(f"üìä Status: {response.status_code}")
            
            if response.status_code == 200:
                print("‚úÖ URL –¥–æ—Å—Ç—É–ø–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                content_type = response.headers.get('content-type', 'unknown')
                print(f"üìÑ Content-Type: {content_type}")
                
                cors_origin = response.headers.get('access-control-allow-origin')
                if cors_origin:
                    print(f"üåê CORS Origin: {cors_origin}")
                else:
                    print("‚ö†Ô∏è CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                    
            elif response.status_code == 404:
                print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (404)")
            elif response.status_code == 403:
                print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (403)")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_bucket_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ä–∞–∑–Ω—ã–º bucket"""
    
    print("\\nü™£ –¢–ï–°–¢ –î–û–°–¢–£–ü–ê –ö BUCKET")
    print("=" * 40)
    
    base_url = "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public"
    
    buckets = [
        "images",
        "carousel-assets", 
        "carousel-templates",
        "templates",
        "generated"
    ]
    
    for bucket in buckets:
        url = f"{base_url}/{bucket}/"
        print(f"\\nü™£ Bucket: {bucket}")
        print(f"üåê URL: {url}")
        
        try:
            response = requests.head(url, timeout=5)
            print(f"üìä Status: {response.status_code}")
            
            if response.status_code in [200, 403]:  # 403 –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å —á—Ç–æ bucket —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–æ –ø—É—Å—Ç–æ–π
                print("‚úÖ Bucket –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("‚ùå Bucket –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                
        except requests.exceptions.RequestException as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_supabase_urls()
    test_bucket_access()