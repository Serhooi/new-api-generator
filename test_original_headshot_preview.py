#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–µ–≤—å—é —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Ö–µ–¥—à–æ—Ç–æ–º (–±–µ–∑ –∑–∞–º–µ–Ω—ã)
"""

from preview_system import create_preview_with_data

def test_original_headshot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–µ–≤—å—é —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Ö–µ–¥—à–æ—Ç–æ–º"""
    print("üß™ –¢–ï–°–¢ –û–†–ò–ì–ò–ù–ê–õ–¨–ù–û–ì–û –•–ï–î–®–û–¢–ê –í –ü–†–ï–í–¨–Æ")
    print("=" * 50)
    
    # –ü—Ä–æ—Å—Ç–æ–π SVG —Å —Ö–µ–¥—à–æ—Ç–æ–º
    test_svg = '''<svg width="400" height="300" viewBox="0 0 400 300" xmlns="http://www.w3.org/2000/svg">
        <defs>
            <pattern id="headshot_pattern" patternUnits="objectBoundingBox" width="1" height="1">
                <image id="headshot_image" href="https://via.placeholder.com/150x150/4F46E5/FFFFFF?text=AGENT" 
                       width="150" height="150" preserveAspectRatio="xMidYMid slice"/>
            </pattern>
        </defs>
        <rect width="400" height="300" fill="#f8f9fa"/>
        <circle cx="100" cy="100" r="50" fill="url(#headshot_pattern)"/>
        <text x="200" y="200" text-anchor="middle" fill="#333" font-family="Arial" font-size="18">
            dyno.name
        </text>
    </svg>'''
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ö–µ–¥—à–æ—Ç–æ–º
    test_replacements = {
        'dyno.name': 'John Smith',
        'dyno.agentheadshot': 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop&crop=face'
    }
    
    print("üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–º–µ–Ω—ã:")
    for k, v in test_replacements.items():
        print(f"   {k}: {str(v)[:50]}...")
    
    print("\nüé® –°–æ–∑–¥–∞—é –ø—Ä–µ–≤—å—é...")
    result = create_preview_with_data(test_svg, test_replacements, 'png')
    
    if result['success']:
        print(f"‚úÖ –ü—Ä–µ–≤—å—é —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÅ –§–∞–π–ª: {result.get('path', 'N/A')}")
        print(f"üîó URL: {result.get('url', 'N/A')}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {result.get('width', 'N/A')}x{result.get('height', 'N/A')}")
        print(f"üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {result.get('file_size', 'N/A')} –±–∞–π—Ç")
        
        print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –•–µ–¥—à–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —à–∞–±–ª–æ–Ω–µ")
        print(f"   (–ù–ï –∑–∞–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ dyno.agentheadshot)")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error', 'Unknown error')}")

if __name__ == "__main__":
    test_original_headshot()