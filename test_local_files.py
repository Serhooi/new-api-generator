#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
"""

import requests
import json
import os

def test_local_carousel():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º"""
    
    print("üß™ –¢–ï–°–¢ –õ–û–ö–ê–õ–¨–ù–û–ì–û –°–û–•–†–ê–ù–ï–ù–ò–Ø –ö–ê–†–£–°–ï–õ–ò")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ output –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    output_dir = "output/carousel"
    if not os.path.exists(output_dir):
        print(f"üìÅ –°–æ–∑–¥–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: {output_dir}")
        os.makedirs(output_dir, exist_ok=True)
    else:
        print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {output_dir}")
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_data = {
        "dyno.agentName": "–¢–µ—Å—Ç –ê–≥–µ–Ω—Ç",
        "dyno.agentPhone": "+1234567890", 
        "dyno.agentEmail": "test@example.com",
        "dyno.price": "$500,000",
        "dyno.propertyAddress": "123 Test Street",
        "dyno.bedrooms": "3",
        "dyno.bathrooms": "2",
        "dyno.date": "Aug 12, 2025",
        "dyno.time": "2:00 PM",
        "dyno.propertyimage": "https://images.unsplash.com/photo-1570129477492-45c003edd2be?w=400&h=300",
        "dyno.propertyimage2": "https://images.unsplash.com/photo-1564013799919-ab600027ffc6?w=400&h=300", 
        "dyno.agentheadshot": "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=120&h=120&fit=crop&crop=face",
        "dyno.logo": "https://images.unsplash.com/photo-1599305445671-ac291c95aaa9?w=142&h=56",
        "dyno.propertyfeatures": "–ë–∞—Å—Å–µ–π–Ω, –≥–∞—Ä–∞–∂, —Å–∞–¥"
    }
    
    try:
        print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏...")
        
        response = requests.post(
            'http://localhost:5000/api/carousel/create-and-generate',
            json=test_data,
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üÜî ID –∫–∞—Ä—É—Å–µ–ª–∏: {result.get('carousel_id', 'N/A')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–ª–∞–π–¥—ã
            slides = result.get('slides', [])
            print(f"üìä –°–æ–∑–¥–∞–Ω–æ —Å–ª–∞–π–¥–æ–≤: {len(slides)}")
            
            for i, slide in enumerate(slides):
                slide_type = slide.get('type', 'unknown')
                slide_url = slide.get('url', 'N/A')
                
                print(f"\nüìã –°–ª–∞–π–¥ {i+1} ({slide_type}):")
                print(f"   URL: {slide_url}")
                
                # –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
                if slide_url.startswith('http://localhost:5000/output/'):
                    local_path = slide_url.replace('http://localhost:5000/', '')
                    if os.path.exists(local_path):
                        file_size = os.path.getsize(local_path)
                        print(f"   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_size} –±–∞–π—Ç")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                        with open(local_path, 'r', encoding='utf-8') as f:
                            content = f.read()
                            if content.strip().startswith('<?xml') or content.strip().startswith('<svg'):
                                print("   ‚úÖ –≠—Ç–æ SVG —Ñ–∞–π–ª")
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                                base64_count = content.count('data:image/')
                                print(f"   üìä Base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {base64_count}")
                            else:
                                print("   ‚ùå –ù–µ SVG —Ñ–∞–π–ª")
                    else:
                        print(f"   ‚ùå –õ–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {local_path}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ HTTP
                check_slide_accessibility(slide_url, i+1)
            
            return result
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text[:500]}...")
            return None
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 app.py")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def check_slide_accessibility(url, slide_num):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–ª–∞–π–¥–∞ —á–µ—Ä–µ–∑ HTTP"""
    
    try:
        print(f"   üåê –ü—Ä–æ–≤–µ—Ä—è—é HTTP –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å...")
        
        response = requests.get(url, timeout=5)
        
        if response.status_code == 200:
            content = response.text
            size = len(content)
            print(f"   ‚úÖ HTTP –¥–æ—Å—Ç—É–ø–µ–Ω: {size} —Å–∏–º–≤–æ–ª–æ–≤")
            
            if 'data:image/' in content:
                base64_count = content.count('data:image/')
                print(f"   ‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç {base64_count} base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
            else:
                print("   ‚ö†Ô∏è –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
                
        else:
            print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå HTTP –æ—à–∏–±–∫–∞: {e}")

def main():
    """–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç"""
    
    print("üöÄ –¢–ï–°–¢ –õ–û–ö–ê–õ–¨–ù–û–ì–û –°–û–•–†–ê–ù–ï–ù–ò–Ø")
    print("=" * 70)
    print("‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python3 app.py")
    print()
    
    result = test_local_carousel()
    
    print("\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    
    if result:
        print("\n‚úÖ –£–°–ü–ï–•!")
        print("üìã –ü–†–û–í–ï–†–¨–¢–ï:")
        print("1. –í—Å–µ —Å–ª–∞–π–¥—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ HTTP")
        print("2. SVG —Ñ–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å base64 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        print("3. –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–ª–∞–π–¥—ã –±–µ–∑ –æ—à–∏–±–æ–∫")
    else:
        print("\n‚ùå –ü–†–û–ë–õ–ï–ú–´:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏")
        print("3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")

if __name__ == "__main__":
    main()