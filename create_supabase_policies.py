#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫ –¥–ª—è Supabase Storage
"""

import os
from supabase import create_client, Client

def create_storage_policies():
    """–°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º"""
    
    print("üîß –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–ò–¢–ò–ö SUPABASE STORAGE")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    supabase_url = os.environ.get('SUPABASE_URL')
    service_key = os.environ.get('SUPABASE_SERVICE_ROLE_KEY')
    
    if not supabase_url or not service_key:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_ROLE_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role –∫–ª—é—á–æ–º
        supabase: Client = create_client(supabase_url, service_key)
        print(f"‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å service role")
        
        # –°–ø–∏—Å–æ–∫ bucket –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω—ã –ø–æ–ª–∏—Ç–∏–∫–∏
        buckets = ['carousel-assets', 'images']
        
        for bucket_name in buckets:
            print(f"\nü™£ –°–æ–∑–¥–∞—é –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è bucket: {bucket_name}")
            
            # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è
            select_policy = f"""
            CREATE POLICY "Public read access for {bucket_name}" ON storage.objects
            FOR SELECT USING (bucket_id = '{bucket_name}');
            """
            
            # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
            insert_policy = f"""
            CREATE POLICY "Allow public uploads to {bucket_name}" ON storage.objects
            FOR INSERT WITH CHECK (bucket_id = '{bucket_name}');
            """
            
            # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
            update_policy = f"""
            CREATE POLICY "Allow public updates in {bucket_name}" ON storage.objects
            FOR UPDATE USING (bucket_id = '{bucket_name}');
            """
            
            # –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
            delete_policy = f"""
            CREATE POLICY "Allow public deletes in {bucket_name}" ON storage.objects
            FOR DELETE USING (bucket_id = '{bucket_name}');
            """
            
            policies = [
                ("SELECT", select_policy),
                ("INSERT", insert_policy), 
                ("UPDATE", update_policy),
                ("DELETE", delete_policy)
            ]
            
            for policy_type, policy_sql in policies:
                try:
                    result = supabase.rpc('exec_sql', {'sql': policy_sql}).execute()
                    print(f"  ‚úÖ {policy_type} –ø–æ–ª–∏—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
                except Exception as e:
                    print(f"  ‚ö†Ô∏è {policy_type} –ø–æ–ª–∏—Ç–∏–∫–∞: {str(e)}")
        
        print(f"\nüéâ –ü–æ–ª–∏—Ç–∏–∫–∏ —Å–æ–∑–¥–∞–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫: {e}")
        return False

def test_public_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º"""
    
    print("\nüß™ –¢–ï–°–¢ –ü–£–ë–õ–ò–ß–ù–û–ì–û –î–û–°–¢–£–ü–ê")
    print("=" * 40)
    
    import requests
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ URL
    test_urls = [
        "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public/carousel-assets/test/test.svg",
        "https://vahgmyuowsilbxqdjjii.supabase.co/storage/v1/object/public/images/test/test.svg"
    ]
    
    for url in test_urls:
        print(f"\nüåê –¢–µ—Å—Ç–∏—Ä—É—é: {url}")
        try:
            response = requests.head(url, timeout=10)
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 404:
                print("‚ÑπÔ∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞)")
            elif response.status_code == 200:
                print("‚úÖ –§–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω")
            elif response.status_code == 403:
                print("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
            else:
                print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

if __name__ == "__main__":
    success = create_storage_policies()
    if success:
        test_public_access()
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏")