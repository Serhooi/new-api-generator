#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ–º CairoSVG - –≤–µ—Ä—Å–∏—è 2
"""

import os
import sys

def patch_cairocffi():
    """–ü–∞—Ç—á–∏–º cairocffi –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Homebrew Cairo"""
    
    print("üîß –ü–ê–¢–ß–ò–ú CAIROCFFI")
    print("=" * 25)
    
    try:
        import cairocffi
        
        # –ü—É—Ç—å –∫ Cairo –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
        cairo_lib = "/opt/homebrew/Cellar/cairo/1.18.4/lib/libcairo.2.dylib"
        
        if os.path.exists(cairo_lib):
            print(f"‚úÖ Cairo –Ω–∞–π–¥–µ–Ω: {cairo_lib}")
            
            # –ü–∞—Ç—á–∏–º cairocffi
            import ctypes
            cairocffi.cairo = ctypes.CDLL(cairo_lib)
            
            print("‚úÖ cairocffi —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–ø–∞—Ç—á–µ–Ω!")
            return True
        else:
            print("‚ùå Cairo –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ç—á–∞: {e}")
    
    return False

def test_patched_cairosvg():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π CairoSVG"""
    
    print("\nüé® –¢–ï–°–¢ –ü–†–û–ü–ê–¢–ß–ï–ù–ù–û–ì–û CAIROSVG")
    print("=" * 35)
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–∞—Ç—á–∏–º cairocffi
        if not patch_cairocffi():
            return False
        
        # –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º cairosvg
        import cairosvg
        print("‚úÖ CairoSVG –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π SVG
        test_svg = '''<svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
            <rect width="400" height="300" fill="#f0f8ff"/>
            <rect x="20" y="20" width="360" height="260" fill="white" stroke="#1976d2" stroke-width="2"/>
            <text x="200" y="80" text-anchor="middle" font-size="24" fill="#1976d2" font-weight="bold">CairoSVG</text>
            <text x="200" y="120" text-anchor="middle" font-size="16" fill="#666">Patched Version</text>
            <circle cx="200" cy="180" r="40" fill="#4caf50"/>
            <text x="200" y="190" text-anchor="middle" font-size="20" fill="white">‚úì</text>
            <text x="200" y="250" text-anchor="middle" font-size="14" fill="#333">Fast & Reliable</text>
        </svg>'''
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PNG
        output_file = 'test_cairo_patched.png'
        
        print("üñºÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é SVG –≤ PNG...")
        
        cairosvg.svg2png(
            bytestring=test_svg.encode('utf-8'),
            write_to=output_file,
            output_width=400,
            output_height=300
        )
        
        if os.path.exists(output_file):
            size = os.path.getsize(output_file)
            print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω: {size} bytes")
            
            if size > 3000:
                print("üéâ CAIROSVG –†–ê–ë–û–¢–ê–ï–¢!")
                os.remove(output_file)
                return True
            else:
                print("‚ö†Ô∏è PNG —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π")
        else:
            print("‚ùå PNG —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    return False

def create_cairo_function():
    """–°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è app.py"""
    
    function_code = '''
def convert_svg_to_png_cairo_patched(svg_content, output_path, width=1080, height=1350):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SVG –≤ PNG —á–µ—Ä–µ–∑ –ø—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π CairoSVG
    """
    try:
        print(f"üé® –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é SVG –≤ PNG —á–µ—Ä–µ–∑ CairoSVG...")
        
        # –ü–∞—Ç—á–∏–º cairocffi
        import cairocffi
        import ctypes
        import os
        
        cairo_lib = "/opt/homebrew/Cellar/cairo/1.18.4/lib/libcairo.2.dylib"
        if os.path.exists(cairo_lib):
            cairocffi.cairo = ctypes.CDLL(cairo_lib)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º cairosvg
        import cairosvg
        
        cairosvg.svg2png(
            bytestring=svg_content.encode('utf-8'),
            write_to=output_path,
            output_width=width,
            output_height=height
        )
        
        print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ CairoSVG: {output_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CairoSVG: {e}")
        return False

def convert_svg_to_png_ultimate_with_cairo(svg_content, output_path, width=1080, height=1350):
    """
    –£–ª—å—Ç–∏–º–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å CairoSVG –≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ
    """
    
    # –ú–µ—Ç–æ–¥ 1: CairoSVG (—Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π)
    if convert_svg_to_png_cairo_patched(svg_content, output_path, width, height):
        return True
    
    # –ú–µ—Ç–æ–¥ 2: Playwright (–µ—Å–ª–∏ CairoSVG –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    try:
        from playwright.sync_api import sync_playwright
        print("üé≠ –ü—Ä–æ–±—É—é Playwright...")
        
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                body {{ 
                    margin: 0; 
                    padding: 0; 
                    background: white;
                    width: {width}px;
                    height: {height}px;
                    overflow: hidden;
                }}
                svg {{ 
                    width: {width}px; 
                    height: {height}px; 
                    display: block;
                }}
            </style>
        </head>
        <body>
            {svg_content}
        </body>
        </html>
        """
        
        with sync_playwright() as p:
            browser = p.chromium.launch()
            page = browser.new_page(viewport={{'width': width, 'height': height}})
            page.set_content(html_content)
            page.wait_for_load_state('networkidle')
            page.screenshot(path=output_path, full_page=False)
            browser.close()
        
        print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Playwright: {output_path}")
        return True
        
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ Playwright: {e}")
    
    # –ú–µ—Ç–æ–¥ 3: PIL fallback
    try:
        from PIL import Image, ImageDraw, ImageFont
        import re
        
        print("üé® –°–æ–∑–¥–∞—é PNG —á–µ—Ä–µ–∑ PIL fallback...")
        
        img = Image.new('RGB', (width, height), color='white')
        draw = ImageDraw.Draw(img)
        
        # –ü–∞—Ä—Å–∏–º —Ü–≤–µ—Ç–∞ –∏ —Ç–µ–∫—Å—Ç –∏–∑ SVG
        colors = re.findall(r'fill="([^"]+)"', svg_content)
        texts = re.findall(r'<text[^>]*>([^<]+)</text>', svg_content)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        try:
            font = ImageFont.truetype("/System/Library/Fonts/Arial.ttf", 24)
        except:
            font = ImageFont.load_default()
        
        y_pos = 50
        for text in texts[:5]:
            if text.strip():
                draw.text((50, y_pos), text.strip(), fill='black', font=font)
                y_pos += 40
        
        draw.rectangle([10, 10, width-10, height-10], outline='gray', width=2)
        img.save(output_path, 'PNG', quality=95)
        
        print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ PIL fallback: {output_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PIL: {e}")
    
    return False
'''
    
    with open('cairo_functions.py', 'w') as f:
        f.write(function_code)
    
    print("üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª cairo_functions.py —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏")

if __name__ == "__main__":
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CAIROSVG - –í–ï–†–°–ò–Ø 2")
    print("=" * 45)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–ø–∞—Ç—á–µ–Ω–Ω—ã–π CairoSVG
    success = test_patched_cairosvg()
    
    if success:
        print("\nüéâ CAIROSVG –ò–°–ü–†–ê–í–õ–ï–ù!")
        print("‚úÖ –ü–∞—Ç—á cairocffi —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ CairoSVG —Å–æ–∑–¥–∞–µ—Ç PNG")
        print("‚úÖ –ë—ã—Å—Ç—Ä–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        create_cairo_function()
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è app.py")
    else:
        print("\n‚ùå CairoSVG –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("–û—Å—Ç–∞–µ—Ç—Å—è Playwright –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥")