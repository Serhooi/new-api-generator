#!/usr/bin/env python3
"""
PNG –ø—Ä–µ–≤—å—é —Å Playwright
"""

import os
import tempfile
from playwright.sync_api import sync_playwright

def svg_to_png_with_playwright(svg_content, output_path, width=400, height=600):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç SVG –≤ PNG –∏—Å–ø–æ–ª—å–∑—É—è Playwright"""
    try:
        # –°–æ–∑–¥–∞–µ–º HTML —Å SVG
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                body {{ 
                    margin: 0; 
                    padding: 0; 
                    background: white;
                    width: {width}px;
                    height: {height}px;
                }}
                svg {{ 
                    width: {width}px; 
                    height: {height}px; 
                    display: block;
                }}
            </style>
        </head>
        <body>
            {svg_content}
        </body>
        </html>
        """
        
        with sync_playwright() as p:
            browser = p.chromium.launch()
            page = browser.new_page(viewport={'width': width, 'height': height})
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º HTML
            page.set_content(html_content)
            
            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
            page.wait_for_load_state('networkidle')
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            page.screenshot(path=output_path, full_page=True)
            
            browser.close()
        
        print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ Playwright: {output_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Playwright: {e}")
        return False

def test_playwright_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é —Å Playwright"""
    
    print("üß™ –¢–ï–°–¢ PLAYWRIGHT PNG –ö–û–ù–í–ï–†–¢–ê–¶–ò–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π SVG
    test_svg = '''<svg width="400" height="600" xmlns="http://www.w3.org/2000/svg">
        <rect width="400" height="600" fill="#e3f2fd"/>
        <rect x="20" y="20" width="360" height="560" fill="white" stroke="#1976d2" stroke-width="2"/>
        <text x="200" y="100" text-anchor="middle" font-size="24" fill="#1976d2">Template Preview</text>
        <text x="200" y="150" text-anchor="middle" font-size="16" fill="#666">Generated with Playwright</text>
        <circle cx="200" cy="300" r="50" fill="#4caf50"/>
        <text x="200" y="310" text-anchor="middle" font-size="14" fill="white">‚úì</text>
    </svg>'''
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é
    test_output = 'test_playwright_preview.png'
    
    if svg_to_png_with_playwright(test_svg, test_output):
        print("‚úÖ Playwright –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if os.path.exists(test_output):
            size = os.path.getsize(test_output)
            print(f"üìä –†–∞–∑–º–µ—Ä PNG: {size} bytes")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            os.remove(test_output)
            return True
    
    return False

def update_app_for_playwright():
    """–û–±–Ω–æ–≤–ª—è–µ–º app.py –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Playwright"""
    
    print("üîß –û–±–Ω–æ–≤–ª—è—é app.py –¥–ª—è Playwright...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ app.py
    playwright_function = '''
def convert_svg_to_png_playwright(svg_content, output_path, width=400, height=600):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç SVG –≤ PNG –∏—Å–ø–æ–ª—å–∑—É—è Playwright"""
    try:
        from playwright.sync_api import sync_playwright
        
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                body {{ 
                    margin: 0; 
                    padding: 0; 
                    background: white;
                    width: {width}px;
                    height: {height}px;
                }}
                svg {{ 
                    width: {width}px; 
                    height: {height}px; 
                    display: block;
                }}
            </style>
        </head>
        <body>
            {svg_content}
        </body>
        </html>
        """
        
        with sync_playwright() as p:
            browser = p.chromium.launch()
            page = browser.new_page(viewport={{'width': width, 'height': height}})
            page.set_content(html_content)
            page.wait_for_load_state('networkidle')
            page.screenshot(path=output_path, full_page=True)
            browser.close()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Playwright: {{e}}")
        return False

def generate_svg_preview(svg_content, width=400, height=600):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PNG –ø—Ä–µ–≤—å—é –∏–∑ SVG –∏—Å–ø–æ–ª—å–∑—É—è Playwright"""
    try:
        import tempfile
        with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as f:
            temp_png_path = f.name
        
        if convert_svg_to_png_playwright(svg_content, temp_png_path, width, height):
            with open(temp_png_path, 'rb') as f:
                png_data = f.read()
            os.unlink(temp_png_path)
            return png_data
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å PNG –ø—Ä–µ–≤—å—é")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PNG –ø—Ä–µ–≤—å—é: {{e}}")
        return None
'''
    
    with open('app.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é generate_svg_preview
    import re
    content = re.sub(
        r'def generate_svg_preview\(svg_content, width=400, height=600\):.*?return svg_content',
        playwright_function.strip(),
        content,
        flags=re.DOTALL
    )
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è PNG
    content = content.replace('.svg', '.png')
    content = content.replace('image/svg+xml', 'image/png')
    content = content.replace('svg_data', 'png_data')
    content = content.replace('svg_path', 'png_path')
    
    with open('app.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ app.py –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è Playwright PNG –ø—Ä–µ–≤—å—é!")

if __name__ == "__main__":
    if test_playwright_conversion():
        print("\nüéâ Playwright —Ä–∞–±–æ—Ç–∞–µ—Ç! –û–±–Ω–æ–≤–ª—è—é app.py...")
        update_app_for_playwright()
        print("\n‚úÖ PNG –ø—Ä–µ–≤—å—é —Å Playwright –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("üìã –¢–µ–ø–µ—Ä—å –ø—Ä–µ–≤—å—é –±—É–¥—É—Ç –∫—Ä–∞—Å–∏–≤—ã–µ PNG —Ñ–∞–π–ª—ã")
    else:
        print("\n‚ùå Playwright –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")