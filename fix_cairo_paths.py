#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è CairoSVG –Ω–∞ macOS
"""

import os
import sys

def fix_cairo_paths():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è Cairo"""
    
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê CAIRO –ü–£–¢–ï–ô")
    print("=" * 30)
    
    # –ü—É—Ç–∏ –∫ Cairo –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º
    cairo_lib_path = "/opt/homebrew/Cellar/cairo/1.18.4/lib"
    cairo_lib_file = f"{cairo_lib_path}/libcairo.2.dylib"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(cairo_lib_file):
        print(f"‚úÖ Cairo –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {cairo_lib_file}")
    else:
        print(f"‚ùå Cairo –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {cairo_lib_file}")
        return False
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['DYLD_LIBRARY_PATH'] = f"{cairo_lib_path}:{os.environ.get('DYLD_LIBRARY_PATH', '')}"
    os.environ['CAIRO_LIBRARY_PATH'] = cairo_lib_path
    
    # –ü—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å cairocffi –Ω–∞–ø—Ä—è–º—É—é
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é cairocffi...")
        
        # –ü–∞—Ç—á–∏–º cairocffi —á—Ç–æ–±—ã –æ–Ω –∏—Å–∫–∞–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
        import cairocffi
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
        cairocffi.cairo = cairocffi.dlopen(cairo_lib_file)
        
        print("‚úÖ cairocffi —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ cairocffi: {e}")
        return False

def test_cairosvg_with_fixed_paths():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º CairoSVG —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏"""
    
    print("\nüé® –¢–ï–°–¢ CAIROSVG –° –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ú–ò –ü–£–¢–Ø–ú–ò")
    print("=" * 45)
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏
        if not fix_cairo_paths():
            return False
        
        # –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º cairosvg
        import cairosvg
        print("‚úÖ CairoSVG –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π SVG
        test_svg = '''<svg width="400" height="300" xmlns="http://www.w3.org/2000/svg">
            <rect width="400" height="300" fill="#e3f2fd"/>
            <rect x="20" y="20" width="360" height="260" fill="white" stroke="#1976d2" stroke-width="3"/>
            <text x="200" y="80" text-anchor="middle" font-size="28" fill="#1976d2" font-weight="bold">CairoSVG Test</text>
            <text x="200" y="120" text-anchor="middle" font-size="18" fill="#666">Fast SVG to PNG</text>
            <rect x="50" y="140" width="300" height="80" fill="#4caf50"/>
            <text x="200" y="190" text-anchor="middle" font-size="24" fill="white" font-weight="bold">SUCCESS!</text>
        </svg>'''
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ PNG
        output_file = 'test_cairo_fixed.png'
        
        print("üñºÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é SVG –≤ PNG —á–µ—Ä–µ–∑ CairoSVG...")
        
        cairosvg.svg2png(
            bytestring=test_svg.encode('utf-8'),
            write_to=output_file,
            output_width=400,
            output_height=300
        )
        
        if os.path.exists(output_file):
            size = os.path.getsize(output_file)
            print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ CairoSVG: {size} bytes")
            
            if size > 5000:
                print("üéâ CAIROSVG –†–ê–ë–û–¢–ê–ï–¢!")
                os.remove(output_file)
                return True
            else:
                print("‚ö†Ô∏è PNG —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π")
        else:
            print("‚ùå PNG —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return False

def create_cairo_wrapper():
    """–°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è CairoSVG"""
    
    wrapper_code = '''
import os
import sys

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è Cairo
cairo_lib_path = "/opt/homebrew/Cellar/cairo/1.18.4/lib"
os.environ['DYLD_LIBRARY_PATH'] = f"{cairo_lib_path}:{os.environ.get('DYLD_LIBRARY_PATH', '')}"

def convert_svg_to_png_cairo_fixed(svg_content, output_path, width=1080, height=1350):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SVG –≤ PNG —á–µ—Ä–µ–∑ CairoSVG —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
    """
    try:
        print(f"üé® –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é SVG –≤ PNG —á–µ—Ä–µ–∑ CairoSVG...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
        import cairocffi
        cairo_lib_file = f"{cairo_lib_path}/libcairo.2.dylib"
        cairocffi.cairo = cairocffi.dlopen(cairo_lib_file)
        
        import cairosvg
        
        cairosvg.svg2png(
            bytestring=svg_content.encode('utf-8'),
            write_to=output_path,
            output_width=width,
            output_height=height
        )
        
        print(f"‚úÖ PNG —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ CairoSVG: {output_path}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CairoSVG: {e}")
        return False
'''
    
    with open('cairo_wrapper.py', 'w') as f:
        f.write(wrapper_code)
    
    print("üìù –°–æ–∑–¥–∞–Ω–∞ –æ–±–µ—Ä—Ç–∫–∞ cairo_wrapper.py")

if __name__ == "__main__":
    print("üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CAIRO –ù–ê MACOS")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø—É—Ç–∏
    success = test_cairosvg_with_fixed_paths()
    
    if success:
        print("\nüéâ CAIRO –ò–°–ü–†–ê–í–õ–ï–ù!")
        print("‚úÖ CairoSVG —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏")
        print("‚úÖ –ë—ã—Å—Ç—Ä–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è SVG ‚Üí PNG")
        
        # –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É
        create_cairo_wrapper()
        print("‚úÖ –û–±–µ—Ä—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ app.py")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å Cairo")
        print("–û—Å—Ç–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Playwright")